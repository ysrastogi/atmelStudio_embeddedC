
Experiment-2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800200  000010b8  0000114c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800220  00800220  0000116c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000116c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00001208  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017cf  00000000  00000000  000012f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eb2  00000000  00000000  00002ac7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a0f  00000000  00000000  00003979  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f4  00000000  00000000  00004388  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007bb  00000000  00000000  0000457c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009d7  00000000  00000000  00004d37  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  0000570e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f2 c0       	rjmp	.+484    	; 0x1e6 <__ctors_end>
       2:	00 00       	nop
       4:	0f c1       	rjmp	.+542    	; 0x224 <__bad_interrupt>
       6:	00 00       	nop
       8:	0d c1       	rjmp	.+538    	; 0x224 <__bad_interrupt>
       a:	00 00       	nop
       c:	0b c1       	rjmp	.+534    	; 0x224 <__bad_interrupt>
       e:	00 00       	nop
      10:	09 c1       	rjmp	.+530    	; 0x224 <__bad_interrupt>
      12:	00 00       	nop
      14:	07 c1       	rjmp	.+526    	; 0x224 <__bad_interrupt>
      16:	00 00       	nop
      18:	05 c1       	rjmp	.+522    	; 0x224 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	03 c1       	rjmp	.+518    	; 0x224 <__bad_interrupt>
      1e:	00 00       	nop
      20:	01 c1       	rjmp	.+514    	; 0x224 <__bad_interrupt>
      22:	00 00       	nop
      24:	ff c0       	rjmp	.+510    	; 0x224 <__bad_interrupt>
      26:	00 00       	nop
      28:	fd c0       	rjmp	.+506    	; 0x224 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	fb c0       	rjmp	.+502    	; 0x224 <__bad_interrupt>
      2e:	00 00       	nop
      30:	f9 c0       	rjmp	.+498    	; 0x224 <__bad_interrupt>
      32:	00 00       	nop
      34:	f7 c0       	rjmp	.+494    	; 0x224 <__bad_interrupt>
      36:	00 00       	nop
      38:	f5 c0       	rjmp	.+490    	; 0x224 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	f3 c0       	rjmp	.+486    	; 0x224 <__bad_interrupt>
      3e:	00 00       	nop
      40:	f1 c0       	rjmp	.+482    	; 0x224 <__bad_interrupt>
      42:	00 00       	nop
      44:	ef c0       	rjmp	.+478    	; 0x224 <__bad_interrupt>
      46:	00 00       	nop
      48:	ed c0       	rjmp	.+474    	; 0x224 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	eb c0       	rjmp	.+470    	; 0x224 <__bad_interrupt>
      4e:	00 00       	nop
      50:	e9 c0       	rjmp	.+466    	; 0x224 <__bad_interrupt>
      52:	00 00       	nop
      54:	e7 c0       	rjmp	.+462    	; 0x224 <__bad_interrupt>
      56:	00 00       	nop
      58:	e5 c0       	rjmp	.+458    	; 0x224 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	e3 c0       	rjmp	.+454    	; 0x224 <__bad_interrupt>
      5e:	00 00       	nop
      60:	e1 c0       	rjmp	.+450    	; 0x224 <__bad_interrupt>
      62:	00 00       	nop
      64:	df c0       	rjmp	.+446    	; 0x224 <__bad_interrupt>
      66:	00 00       	nop
      68:	dd c0       	rjmp	.+442    	; 0x224 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	db c0       	rjmp	.+438    	; 0x224 <__bad_interrupt>
      6e:	00 00       	nop
      70:	d9 c0       	rjmp	.+434    	; 0x224 <__bad_interrupt>
      72:	00 00       	nop
      74:	66 c1       	rjmp	.+716    	; 0x342 <__vector_29>
      76:	00 00       	nop
      78:	d5 c0       	rjmp	.+426    	; 0x224 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	d3 c0       	rjmp	.+422    	; 0x224 <__bad_interrupt>
      7e:	00 00       	nop
      80:	d1 c0       	rjmp	.+418    	; 0x224 <__bad_interrupt>
      82:	00 00       	nop
      84:	cf c0       	rjmp	.+414    	; 0x224 <__bad_interrupt>
      86:	00 00       	nop
      88:	cd c0       	rjmp	.+410    	; 0x224 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	cb c0       	rjmp	.+406    	; 0x224 <__bad_interrupt>
      8e:	00 00       	nop
      90:	c9 c0       	rjmp	.+402    	; 0x224 <__bad_interrupt>
      92:	00 00       	nop
      94:	c7 c0       	rjmp	.+398    	; 0x224 <__bad_interrupt>
      96:	00 00       	nop
      98:	c5 c0       	rjmp	.+394    	; 0x224 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	c3 c0       	rjmp	.+390    	; 0x224 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	c1 c0       	rjmp	.+386    	; 0x224 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	bf c0       	rjmp	.+382    	; 0x224 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	bd c0       	rjmp	.+378    	; 0x224 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	bb c0       	rjmp	.+374    	; 0x224 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	b9 c0       	rjmp	.+370    	; 0x224 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	b7 c0       	rjmp	.+366    	; 0x224 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	b5 c0       	rjmp	.+362    	; 0x224 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	b3 c0       	rjmp	.+358    	; 0x224 <__bad_interrupt>
      be:	00 00       	nop
      c0:	b1 c0       	rjmp	.+354    	; 0x224 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	af c0       	rjmp	.+350    	; 0x224 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ad c0       	rjmp	.+346    	; 0x224 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	ab c0       	rjmp	.+342    	; 0x224 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	a9 c0       	rjmp	.+338    	; 0x224 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	a7 c0       	rjmp	.+334    	; 0x224 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	a5 c0       	rjmp	.+330    	; 0x224 <__bad_interrupt>
      da:	00 00       	nop
      dc:	a3 c0       	rjmp	.+326    	; 0x224 <__bad_interrupt>
      de:	00 00       	nop
      e0:	a1 c0       	rjmp	.+322    	; 0x224 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	6e 61       	ori	r22, 0x1E	; 30
      e6:	6e 00       	.word	0x006e	; ????

000000e8 <__c.2332>:
      e8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      f8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     108:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     118:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     128:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     138:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     148:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     158:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     168:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     178:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     188:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     198:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1a8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1b8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1c8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1d8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001e6 <__ctors_end>:
     1e6:	11 24       	eor	r1, r1
     1e8:	1f be       	out	0x3f, r1	; 63
     1ea:	cf ef       	ldi	r28, 0xFF	; 255
     1ec:	d1 e2       	ldi	r29, 0x21	; 33
     1ee:	de bf       	out	0x3e, r29	; 62
     1f0:	cd bf       	out	0x3d, r28	; 61
     1f2:	00 e0       	ldi	r16, 0x00	; 0
     1f4:	0c bf       	out	0x3c, r16	; 60

000001f6 <__do_copy_data>:
     1f6:	12 e0       	ldi	r17, 0x02	; 2
     1f8:	a0 e0       	ldi	r26, 0x00	; 0
     1fa:	b2 e0       	ldi	r27, 0x02	; 2
     1fc:	e8 eb       	ldi	r30, 0xB8	; 184
     1fe:	f0 e1       	ldi	r31, 0x10	; 16
     200:	00 e0       	ldi	r16, 0x00	; 0
     202:	0b bf       	out	0x3b, r16	; 59
     204:	02 c0       	rjmp	.+4      	; 0x20a <__do_copy_data+0x14>
     206:	07 90       	elpm	r0, Z+
     208:	0d 92       	st	X+, r0
     20a:	a0 32       	cpi	r26, 0x20	; 32
     20c:	b1 07       	cpc	r27, r17
     20e:	d9 f7       	brne	.-10     	; 0x206 <__do_copy_data+0x10>

00000210 <__do_clear_bss>:
     210:	22 e0       	ldi	r18, 0x02	; 2
     212:	a0 e2       	ldi	r26, 0x20	; 32
     214:	b2 e0       	ldi	r27, 0x02	; 2
     216:	01 c0       	rjmp	.+2      	; 0x21a <.do_clear_bss_start>

00000218 <.do_clear_bss_loop>:
     218:	1d 92       	st	X+, r1

0000021a <.do_clear_bss_start>:
     21a:	a2 32       	cpi	r26, 0x22	; 34
     21c:	b2 07       	cpc	r27, r18
     21e:	e1 f7       	brne	.-8      	; 0x218 <.do_clear_bss_loop>
     220:	b5 d0       	rcall	.+362    	; 0x38c <main>
     222:	48 c7       	rjmp	.+3728   	; 0x10b4 <_exit>

00000224 <__bad_interrupt>:
     224:	ed ce       	rjmp	.-550    	; 0x0 <__vectors>

00000226 <sharp_sensor_pin_config>:

	// clear the MUX5 bit for next conversion
	ADCSRB_reg &= ~(1 << MUX5_bit) ;

	// clear the MUX[4:0] bits for next conversion
	ADMUX_reg &= ~((1 << MUX4_bit) | (1 << MUX3_bit) | (1 << MUX2_bit) | (1 << MUX1_bit) | (1 << MUX0_bit));
     226:	e7 e0       	ldi	r30, 0x07	; 7
     228:	f1 e0       	ldi	r31, 0x01	; 1
     22a:	80 81       	ld	r24, Z
     22c:	8b 7f       	andi	r24, 0xFB	; 251
     22e:	80 83       	st	Z, r24
     230:	e8 e0       	ldi	r30, 0x08	; 8
     232:	f1 e0       	ldi	r31, 0x01	; 1
     234:	80 81       	ld	r24, Z
     236:	8b 7f       	andi	r24, 0xFB	; 251
     238:	80 83       	st	Z, r24
     23a:	08 95       	ret

0000023c <adc_init>:
     23c:	f8 94       	cli
     23e:	ea e7       	ldi	r30, 0x7A	; 122
     240:	f0 e0       	ldi	r31, 0x00	; 0
     242:	80 81       	ld	r24, Z
     244:	8e e8       	ldi	r24, 0x8E	; 142
     246:	80 83       	st	Z, r24
     248:	eb e7       	ldi	r30, 0x7B	; 123
     24a:	f0 e0       	ldi	r31, 0x00	; 0
     24c:	80 81       	ld	r24, Z
     24e:	80 7b       	andi	r24, 0xB0	; 176
     250:	80 83       	st	Z, r24
     252:	ec e7       	ldi	r30, 0x7C	; 124
     254:	f0 e0       	ldi	r31, 0x00	; 0
     256:	80 81       	ld	r24, Z
     258:	80 72       	andi	r24, 0x20	; 32
     25a:	80 64       	ori	r24, 0x40	; 64
     25c:	80 83       	st	Z, r24
     25e:	80 81       	ld	r24, Z
     260:	80 62       	ori	r24, 0x20	; 32
     262:	80 83       	st	Z, r24
     264:	80 b7       	in	r24, 0x30	; 48
     266:	80 68       	ori	r24, 0x80	; 128
     268:	80 bf       	out	0x30, r24	; 48
     26a:	78 94       	sei
     26c:	08 95       	ret

0000026e <select_adc_channel>:
     26e:	83 30       	cpi	r24, 0x03	; 3
     270:	61 f4       	brne	.+24     	; 0x28a <select_adc_channel+0x1c>
     272:	ec e7       	ldi	r30, 0x7C	; 124
     274:	f0 e0       	ldi	r31, 0x00	; 0
     276:	90 81       	ld	r25, Z
     278:	90 7e       	andi	r25, 0xE0	; 224
     27a:	91 60       	ori	r25, 0x01	; 1
     27c:	90 83       	st	Z, r25
     27e:	eb e7       	ldi	r30, 0x7B	; 123
     280:	f0 e0       	ldi	r31, 0x00	; 0
     282:	90 81       	ld	r25, Z
     284:	97 7f       	andi	r25, 0xF7	; 247
     286:	90 83       	st	Z, r25
     288:	1a c0       	rjmp	.+52     	; 0x2be <select_adc_channel+0x50>
     28a:	82 30       	cpi	r24, 0x02	; 2
     28c:	59 f4       	brne	.+22     	; 0x2a4 <select_adc_channel+0x36>
     28e:	ec e7       	ldi	r30, 0x7C	; 124
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	90 81       	ld	r25, Z
     294:	90 7e       	andi	r25, 0xE0	; 224
     296:	90 83       	st	Z, r25
     298:	eb e7       	ldi	r30, 0x7B	; 123
     29a:	f0 e0       	ldi	r31, 0x00	; 0
     29c:	90 81       	ld	r25, Z
     29e:	97 7f       	andi	r25, 0xF7	; 247
     2a0:	90 83       	st	Z, r25
     2a2:	1b c0       	rjmp	.+54     	; 0x2da <select_adc_channel+0x6c>
     2a4:	8a 30       	cpi	r24, 0x0A	; 10
     2a6:	59 f4       	brne	.+22     	; 0x2be <select_adc_channel+0x50>
     2a8:	ec e7       	ldi	r30, 0x7C	; 124
     2aa:	f0 e0       	ldi	r31, 0x00	; 0
     2ac:	90 81       	ld	r25, Z
     2ae:	90 7e       	andi	r25, 0xE0	; 224
     2b0:	90 83       	st	Z, r25
     2b2:	eb e7       	ldi	r30, 0x7B	; 123
     2b4:	f0 e0       	ldi	r31, 0x00	; 0
     2b6:	90 81       	ld	r25, Z
     2b8:	97 7f       	andi	r25, 0xF7	; 247
     2ba:	90 83       	st	Z, r25
     2bc:	1c c0       	rjmp	.+56     	; 0x2f6 <select_adc_channel+0x88>
     2be:	81 30       	cpi	r24, 0x01	; 1
     2c0:	61 f4       	brne	.+24     	; 0x2da <select_adc_channel+0x6c>
     2c2:	ec e7       	ldi	r30, 0x7C	; 124
     2c4:	f0 e0       	ldi	r31, 0x00	; 0
     2c6:	90 81       	ld	r25, Z
     2c8:	90 7e       	andi	r25, 0xE0	; 224
     2ca:	92 60       	ori	r25, 0x02	; 2
     2cc:	90 83       	st	Z, r25
     2ce:	eb e7       	ldi	r30, 0x7B	; 123
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	90 81       	ld	r25, Z
     2d4:	97 7f       	andi	r25, 0xF7	; 247
     2d6:	90 83       	st	Z, r25
     2d8:	1c c0       	rjmp	.+56     	; 0x312 <select_adc_channel+0xa4>
     2da:	86 30       	cpi	r24, 0x06	; 6
     2dc:	61 f4       	brne	.+24     	; 0x2f6 <select_adc_channel+0x88>
     2de:	ec e7       	ldi	r30, 0x7C	; 124
     2e0:	f0 e0       	ldi	r31, 0x00	; 0
     2e2:	80 81       	ld	r24, Z
     2e4:	80 7e       	andi	r24, 0xE0	; 224
     2e6:	83 60       	ori	r24, 0x03	; 3
     2e8:	80 83       	st	Z, r24
     2ea:	eb e7       	ldi	r30, 0x7B	; 123
     2ec:	f0 e0       	ldi	r31, 0x00	; 0
     2ee:	80 81       	ld	r24, Z
     2f0:	87 7f       	andi	r24, 0xF7	; 247
     2f2:	80 83       	st	Z, r24
     2f4:	08 95       	ret
     2f6:	87 30       	cpi	r24, 0x07	; 7
     2f8:	61 f4       	brne	.+24     	; 0x312 <select_adc_channel+0xa4>
     2fa:	ec e7       	ldi	r30, 0x7C	; 124
     2fc:	f0 e0       	ldi	r31, 0x00	; 0
     2fe:	80 81       	ld	r24, Z
     300:	80 7e       	andi	r24, 0xE0	; 224
     302:	84 60       	ori	r24, 0x04	; 4
     304:	80 83       	st	Z, r24
     306:	eb e7       	ldi	r30, 0x7B	; 123
     308:	f0 e0       	ldi	r31, 0x00	; 0
     30a:	80 81       	ld	r24, Z
     30c:	87 7f       	andi	r24, 0xF7	; 247
     30e:	80 83       	st	Z, r24
     310:	08 95       	ret
     312:	88 30       	cpi	r24, 0x08	; 8
     314:	79 f4       	brne	.+30     	; 0x334 <select_adc_channel+0xc6>
     316:	ec e7       	ldi	r30, 0x7C	; 124
     318:	f0 e0       	ldi	r31, 0x00	; 0
     31a:	90 81       	ld	r25, Z
     31c:	20 81       	ld	r18, Z
     31e:	89 2f       	mov	r24, r25
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	80 7e       	andi	r24, 0xE0	; 224
     324:	85 60       	ori	r24, 0x05	; 5
     326:	82 2b       	or	r24, r18
     328:	80 83       	st	Z, r24
     32a:	eb e7       	ldi	r30, 0x7B	; 123
     32c:	f0 e0       	ldi	r31, 0x00	; 0
     32e:	80 81       	ld	r24, Z
     330:	87 7f       	andi	r24, 0xF7	; 247
     332:	80 83       	st	Z, r24
     334:	08 95       	ret

00000336 <start_adc>:
     336:	ea e7       	ldi	r30, 0x7A	; 122
     338:	f0 e0       	ldi	r31, 0x00	; 0
     33a:	80 81       	ld	r24, Z
     33c:	80 64       	ori	r24, 0x40	; 64
     33e:	80 83       	st	Z, r24
     340:	08 95       	ret

00000342 <__vector_29>:
}


// read the ADC data after the conversion is complete
ISR( ADC_vect ){
     342:	1f 92       	push	r1
     344:	0f 92       	push	r0
     346:	0f b6       	in	r0, 0x3f	; 63
     348:	0f 92       	push	r0
     34a:	11 24       	eor	r1, r1
     34c:	2f 93       	push	r18
     34e:	8f 93       	push	r24
     350:	9f 93       	push	r25

	adc_10bit_data = ((ADCH_reg << 2) | (ADCL_reg >> 6));
     352:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
     356:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	88 0f       	add	r24, r24
     35e:	99 1f       	adc	r25, r25
     360:	88 0f       	add	r24, r24
     362:	99 1f       	adc	r25, r25
     364:	22 95       	swap	r18
     366:	26 95       	lsr	r18
     368:	26 95       	lsr	r18
     36a:	23 70       	andi	r18, 0x03	; 3
     36c:	82 2b       	or	r24, r18
     36e:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <__data_end+0x1>
     372:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <__data_end>

}
     376:	9f 91       	pop	r25
     378:	8f 91       	pop	r24
     37a:	2f 91       	pop	r18
     37c:	0f 90       	pop	r0
     37e:	0f be       	out	0x3f, r0	; 63
     380:	0f 90       	pop	r0
     382:	1f 90       	pop	r1
     384:	18 95       	reti

00000386 <convert_analog_channel_data>:
 */
void convert_analog_channel_data( unsigned char sensor_channel_number ){
	
	// << NOTE >> : You are not allowed to modify or change anything inside this function
	
	select_adc_channel( sensor_channel_number );
     386:	73 df       	rcall	.-282    	; 0x26e <select_adc_channel>
	
	start_adc();
     388:	d6 cf       	rjmp	.-84     	; 0x336 <start_adc>
     38a:	08 95       	ret

0000038c <main>:
     38c:	cf 93       	push	r28
/**
 * @brief      Main Function
 *
 * @details    First Initializes the 2nd Sharp sensor and sends its ADC converted data on LCD and UART
 */
int main(void) {
     38e:	df 93       	push	r29
     390:	cd b7       	in	r28, 0x3d	; 61
     392:	de b7       	in	r29, 0x3e	; 62
     394:	e2 97       	sbiw	r28, 0x32	; 50
     396:	0f b6       	in	r0, 0x3f	; 63
     398:	f8 94       	cli
     39a:	de bf       	out	0x3e, r29	; 62
     39c:	0f be       	out	0x3f, r0	; 63
     39e:	cd bf       	out	0x3d, r28	; 61
	
	// << NOTE >> : You are not allowed to modify or change anything inside this function except a part of while loop
	
	sharp_sensor_pin_config();			// Initialize the 2nd Sharp sensor
     3a0:	42 df       	rcall	.-380    	; 0x226 <sharp_sensor_pin_config>
	
	adc_init();							// Initialize the ADC
     3a2:	4c df       	rcall	.-360    	; 0x23c <adc_init>
	
	lcd_port_config();					// Initialize the LCD port
     3a4:	41 d0       	rcall	.+130    	; 0x428 <lcd_port_config>
     3a6:	b5 d0       	rcall	.+362    	; 0x512 <lcd_init>
	lcd_init();							// Initialize the LCD
     3a8:	8f e5       	ldi	r24, 0x5F	; 95
	
	uart_init(UBRR_VALUE);				// Initialize the UART
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	22 d1       	rcall	.+580    	; 0x5f2 <uart_init>
     3ae:	8a e0       	ldi	r24, 0x0A	; 10
	
	
	// To create string for transmitting 2nd Sharp sensor raw data and corresponding voltage over the UART and LCD
	char tx_raw_adc_data_buffer[25], tx_voltage_buffer[25], lcd_print_raw_adc_data_string[25], lcd_print_voltage_string[25];
	
	convert_analog_channel_data( sharp_sensor_channel );
     3b0:	ea df       	rcall	.-44     	; 0x386 <convert_analog_channel_data>
     3b2:	0f 2e       	mov	r0, r31
     3b4:	fa e7       	ldi	r31, 0x7A	; 122
	
	while(1)
	{
		if ( ( ADCSRA_reg & ( 1 << ADSC_bit ) ) != 0x40 )
     3b6:	8f 2e       	mov	r8, r31
     3b8:	91 2c       	mov	r9, r1
     3ba:	f0 2d       	mov	r31, r0
     3bc:	0f 2e       	mov	r0, r31
     3be:	f0 e0       	ldi	r31, 0x00	; 0
			sharp_sensor_data = adc_10bit_data;


			// ------------------------------- //
			
			sprintf(lcd_print_raw_adc_data_string, "Raw data: %04d", sharp_sensor_data);
     3c0:	af 2e       	mov	r10, r31
     3c2:	f2 e0       	ldi	r31, 0x02	; 2
     3c4:	bf 2e       	mov	r11, r31
     3c6:	f0 2d       	mov	r31, r0
     3c8:	8e 01       	movw	r16, r28
     3ca:	06 5e       	subi	r16, 0xE6	; 230
     3cc:	1f 4f       	sbci	r17, 0xFF	; 255
     3ce:	0f 2e       	mov	r0, r31
     3d0:	ff e0       	ldi	r31, 0x0F	; 15
			lcd_string(1, 1, lcd_print_raw_adc_data_string);
			
			sprintf(tx_raw_adc_data_buffer, "Raw data: %04d\t", sharp_sensor_data);
     3d2:	cf 2e       	mov	r12, r31
     3d4:	f2 e0       	ldi	r31, 0x02	; 2
     3d6:	df 2e       	mov	r13, r31
     3d8:	f0 2d       	mov	r31, r0
     3da:	ce 01       	movw	r24, r28
     3dc:	01 96       	adiw	r24, 0x01	; 1
     3de:	7c 01       	movw	r14, r24
     3e0:	f4 01       	movw	r30, r8
     3e2:	80 81       	ld	r24, Z
	
	convert_analog_channel_data( sharp_sensor_channel );
	
	while(1)
	{
		if ( ( ADCSRA_reg & ( 1 << ADSC_bit ) ) != 0x40 )
     3e4:	86 fd       	sbrc	r24, 6
     3e6:	fc cf       	rjmp	.-8      	; 0x3e0 <main+0x54>
     3e8:	70 90 20 02 	lds	r7, 0x0220	; 0x800220 <__data_end>
		{
			// ------------------------------- //

			sharp_sensor_data = adc_10bit_data;
     3ec:	60 90 21 02 	lds	r6, 0x0221	; 0x800221 <__data_end+0x1>
     3f0:	6f 92       	push	r6
     3f2:	7f 92       	push	r7


			// ------------------------------- //
			
			sprintf(lcd_print_raw_adc_data_string, "Raw data: %04d", sharp_sensor_data);
     3f4:	bf 92       	push	r11
     3f6:	af 92       	push	r10
     3f8:	1f 93       	push	r17
     3fa:	0f 93       	push	r16
     3fc:	cf d5       	rcall	.+2974   	; 0xf9c <sprintf>
     3fe:	a8 01       	movw	r20, r16
			lcd_string(1, 1, lcd_print_raw_adc_data_string);
     400:	61 e0       	ldi	r22, 0x01	; 1
     402:	81 e0       	ldi	r24, 0x01	; 1
     404:	db d0       	rcall	.+438    	; 0x5bc <lcd_string>
     406:	6f 92       	push	r6
			
			sprintf(tx_raw_adc_data_buffer, "Raw data: %04d\t", sharp_sensor_data);
     408:	7f 92       	push	r7
     40a:	df 92       	push	r13
     40c:	cf 92       	push	r12
     40e:	ff 92       	push	r15
     410:	ef 92       	push	r14
     412:	c4 d5       	rcall	.+2952   	; 0xf9c <sprintf>
			uart_tx_string(tx_raw_adc_data_buffer);
     414:	c7 01       	movw	r24, r14
     416:	03 d1       	rcall	.+518    	; 0x61e <uart_tx_string>
     418:	8a e0       	ldi	r24, 0x0A	; 10
			
			convert_analog_channel_data( sharp_sensor_channel );
     41a:	b5 df       	rcall	.-150    	; 0x386 <convert_analog_channel_data>
     41c:	0f b6       	in	r0, 0x3f	; 63
     41e:	f8 94       	cli
     420:	de bf       	out	0x3e, r29	; 62
     422:	0f be       	out	0x3f, r0	; 63
     424:	cd bf       	out	0x3d, r28	; 61
     426:	dc cf       	rjmp	.-72     	; 0x3e0 <main+0x54>

00000428 <lcd_port_config>:
     428:	87 b1       	in	r24, 0x07	; 7
     42a:	87 60       	ori	r24, 0x07	; 7
 * Logic: This function clears LCD by giving specific command as input to lcd_wr_command() function
 * Example Call: lcd_clear();
 */
void lcd_clear (void)
{
	lcd_wr_command(0x01);
     42c:	87 b9       	out	0x07, r24	; 7
     42e:	87 b1       	in	r24, 0x07	; 7
     430:	80 6f       	ori	r24, 0xF0	; 240
     432:	87 b9       	out	0x07, r24	; 7
     434:	88 b1       	in	r24, 0x08	; 8
     436:	88 7f       	andi	r24, 0xF8	; 248
     438:	88 b9       	out	0x08, r24	; 8
     43a:	88 b1       	in	r24, 0x08	; 8
     43c:	8f 70       	andi	r24, 0x0F	; 15
     43e:	88 b9       	out	0x08, r24	; 8
     440:	08 95       	ret

00000442 <lcd_set_4bit>:
     442:	86 e6       	ldi	r24, 0x66	; 102
     444:	9e e0       	ldi	r25, 0x0E	; 14
     446:	01 97       	sbiw	r24, 0x01	; 1
     448:	f1 f7       	brne	.-4      	; 0x446 <lcd_set_4bit+0x4>
     44a:	00 00       	nop
     44c:	40 98       	cbi	0x08, 0	; 8
     44e:	41 98       	cbi	0x08, 1	; 8
     450:	80 e3       	ldi	r24, 0x30	; 48
     452:	88 b9       	out	0x08, r24	; 8
     454:	42 9a       	sbi	0x08, 2	; 8
     456:	ef ef       	ldi	r30, 0xFF	; 255
     458:	f7 e4       	ldi	r31, 0x47	; 71
     45a:	31 97       	sbiw	r30, 0x01	; 1
     45c:	f1 f7       	brne	.-4      	; 0x45a <lcd_set_4bit+0x18>
     45e:	00 c0       	rjmp	.+0      	; 0x460 <lcd_set_4bit+0x1e>
     460:	00 00       	nop
     462:	42 98       	cbi	0x08, 2	; 8
     464:	e6 e6       	ldi	r30, 0x66	; 102
     466:	fe e0       	ldi	r31, 0x0E	; 14
     468:	31 97       	sbiw	r30, 0x01	; 1
     46a:	f1 f7       	brne	.-4      	; 0x468 <lcd_set_4bit+0x26>
     46c:	00 00       	nop
     46e:	40 98       	cbi	0x08, 0	; 8
     470:	41 98       	cbi	0x08, 1	; 8
     472:	88 b9       	out	0x08, r24	; 8
     474:	42 9a       	sbi	0x08, 2	; 8
     476:	ef ef       	ldi	r30, 0xFF	; 255
     478:	f7 e4       	ldi	r31, 0x47	; 71
     47a:	31 97       	sbiw	r30, 0x01	; 1
     47c:	f1 f7       	brne	.-4      	; 0x47a <lcd_set_4bit+0x38>
     47e:	00 c0       	rjmp	.+0      	; 0x480 <lcd_set_4bit+0x3e>
     480:	00 00       	nop
     482:	42 98       	cbi	0x08, 2	; 8
     484:	e6 e6       	ldi	r30, 0x66	; 102
     486:	fe e0       	ldi	r31, 0x0E	; 14
     488:	31 97       	sbiw	r30, 0x01	; 1
     48a:	f1 f7       	brne	.-4      	; 0x488 <lcd_set_4bit+0x46>
     48c:	00 00       	nop
     48e:	40 98       	cbi	0x08, 0	; 8
     490:	41 98       	cbi	0x08, 1	; 8
     492:	88 b9       	out	0x08, r24	; 8
     494:	42 9a       	sbi	0x08, 2	; 8
     496:	8f ef       	ldi	r24, 0xFF	; 255
     498:	97 e4       	ldi	r25, 0x47	; 71
     49a:	01 97       	sbiw	r24, 0x01	; 1
     49c:	f1 f7       	brne	.-4      	; 0x49a <lcd_set_4bit+0x58>
     49e:	00 c0       	rjmp	.+0      	; 0x4a0 <lcd_set_4bit+0x5e>
     4a0:	00 00       	nop
     4a2:	42 98       	cbi	0x08, 2	; 8
     4a4:	e6 e6       	ldi	r30, 0x66	; 102
     4a6:	fe e0       	ldi	r31, 0x0E	; 14
     4a8:	31 97       	sbiw	r30, 0x01	; 1
     4aa:	f1 f7       	brne	.-4      	; 0x4a8 <lcd_set_4bit+0x66>
     4ac:	00 00       	nop
     4ae:	40 98       	cbi	0x08, 0	; 8
     4b0:	41 98       	cbi	0x08, 1	; 8
     4b2:	80 e2       	ldi	r24, 0x20	; 32
     4b4:	88 b9       	out	0x08, r24	; 8
     4b6:	42 9a       	sbi	0x08, 2	; 8
     4b8:	8f ef       	ldi	r24, 0xFF	; 255
     4ba:	97 e4       	ldi	r25, 0x47	; 71
     4bc:	01 97       	sbiw	r24, 0x01	; 1
     4be:	f1 f7       	brne	.-4      	; 0x4bc <lcd_set_4bit+0x7a>
     4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <lcd_set_4bit+0x80>
     4c2:	00 00       	nop
     4c4:	42 98       	cbi	0x08, 2	; 8
     4c6:	08 95       	ret

000004c8 <lcd_wr_command>:
     4c8:	98 b1       	in	r25, 0x08	; 8
     4ca:	9f 70       	andi	r25, 0x0F	; 15
     4cc:	98 b9       	out	0x08, r25	; 8
     4ce:	98 b1       	in	r25, 0x08	; 8
     4d0:	28 2f       	mov	r18, r24
     4d2:	20 7f       	andi	r18, 0xF0	; 240
     4d4:	92 2b       	or	r25, r18
     4d6:	98 b9       	out	0x08, r25	; 8
     4d8:	40 98       	cbi	0x08, 0	; 8
     4da:	41 98       	cbi	0x08, 1	; 8
     4dc:	42 9a       	sbi	0x08, 2	; 8
     4de:	ef ef       	ldi	r30, 0xFF	; 255
     4e0:	f7 e4       	ldi	r31, 0x47	; 71
     4e2:	31 97       	sbiw	r30, 0x01	; 1
     4e4:	f1 f7       	brne	.-4      	; 0x4e2 <lcd_wr_command+0x1a>
     4e6:	00 c0       	rjmp	.+0      	; 0x4e8 <lcd_wr_command+0x20>
     4e8:	00 00       	nop
     4ea:	42 98       	cbi	0x08, 2	; 8
     4ec:	98 b1       	in	r25, 0x08	; 8
     4ee:	9f 70       	andi	r25, 0x0F	; 15
     4f0:	98 b9       	out	0x08, r25	; 8
     4f2:	98 b1       	in	r25, 0x08	; 8
     4f4:	82 95       	swap	r24
     4f6:	80 7f       	andi	r24, 0xF0	; 240
     4f8:	89 2b       	or	r24, r25
     4fa:	88 b9       	out	0x08, r24	; 8
     4fc:	40 98       	cbi	0x08, 0	; 8
     4fe:	41 98       	cbi	0x08, 1	; 8
     500:	42 9a       	sbi	0x08, 2	; 8
     502:	8f ef       	ldi	r24, 0xFF	; 255
     504:	97 e4       	ldi	r25, 0x47	; 71
     506:	01 97       	sbiw	r24, 0x01	; 1
     508:	f1 f7       	brne	.-4      	; 0x506 <lcd_wr_command+0x3e>
     50a:	00 c0       	rjmp	.+0      	; 0x50c <lcd_wr_command+0x44>
     50c:	00 00       	nop
     50e:	42 98       	cbi	0x08, 2	; 8
     510:	08 95       	ret

00000512 <lcd_init>:
     512:	97 df       	rcall	.-210    	; 0x442 <lcd_set_4bit>
     514:	86 e6       	ldi	r24, 0x66	; 102
     516:	9e e0       	ldi	r25, 0x0E	; 14
     518:	01 97       	sbiw	r24, 0x01	; 1
     51a:	f1 f7       	brne	.-4      	; 0x518 <lcd_init+0x6>
     51c:	00 00       	nop
     51e:	88 e2       	ldi	r24, 0x28	; 40
     520:	d3 df       	rcall	.-90     	; 0x4c8 <lcd_wr_command>
     522:	81 e0       	ldi	r24, 0x01	; 1
     524:	d1 df       	rcall	.-94     	; 0x4c8 <lcd_wr_command>
     526:	86 e0       	ldi	r24, 0x06	; 6
     528:	cf df       	rcall	.-98     	; 0x4c8 <lcd_wr_command>
     52a:	8e e0       	ldi	r24, 0x0E	; 14
     52c:	cd df       	rcall	.-102    	; 0x4c8 <lcd_wr_command>
     52e:	80 e8       	ldi	r24, 0x80	; 128
     530:	cb cf       	rjmp	.-106    	; 0x4c8 <lcd_wr_command>
     532:	08 95       	ret

00000534 <lcd_cursor>:
     534:	82 30       	cpi	r24, 0x02	; 2
     536:	69 f0       	breq	.+26     	; 0x552 <lcd_cursor+0x1e>
     538:	18 f4       	brcc	.+6      	; 0x540 <lcd_cursor+0xc>
     53a:	81 30       	cpi	r24, 0x01	; 1
     53c:	31 f0       	breq	.+12     	; 0x54a <lcd_cursor+0x16>
     53e:	08 95       	ret
     540:	83 30       	cpi	r24, 0x03	; 3
     542:	59 f0       	breq	.+22     	; 0x55a <lcd_cursor+0x26>
     544:	84 30       	cpi	r24, 0x04	; 4
     546:	69 f0       	breq	.+26     	; 0x562 <lcd_cursor+0x2e>
     548:	08 95       	ret
     54a:	8f e7       	ldi	r24, 0x7F	; 127
     54c:	86 0f       	add	r24, r22
     54e:	bc cf       	rjmp	.-136    	; 0x4c8 <lcd_wr_command>
     550:	08 95       	ret
     552:	8f eb       	ldi	r24, 0xBF	; 191
     554:	86 0f       	add	r24, r22
     556:	b8 cf       	rjmp	.-144    	; 0x4c8 <lcd_wr_command>
     558:	08 95       	ret
     55a:	83 e9       	ldi	r24, 0x93	; 147
     55c:	86 0f       	add	r24, r22
     55e:	b4 cf       	rjmp	.-152    	; 0x4c8 <lcd_wr_command>
     560:	08 95       	ret
     562:	83 ed       	ldi	r24, 0xD3	; 211
     564:	86 0f       	add	r24, r22
     566:	b0 cf       	rjmp	.-160    	; 0x4c8 <lcd_wr_command>
     568:	08 95       	ret

0000056a <lcd_wr_char>:
 * Output: None
 * Logic: This function prints an alpha-numeric character at specified (row, column) position on LCD
 * Example Call: lcd_wr_char(1, 4, 'A') => to write character 'A' to the LCD
 */
void lcd_wr_char(char row, char column, char alpha_num_char)
{
     56a:	cf 93       	push	r28
     56c:	c4 2f       	mov	r28, r20
	lcd_cursor (row, column);
     56e:	e2 df       	rcall	.-60     	; 0x534 <lcd_cursor>
	
	char temp;
	
	temp = alpha_num_char;
	temp = (temp & 0xF0);
	lcd_data_port_reg &= 0x0F;
     570:	88 b1       	in	r24, 0x08	; 8
     572:	8f 70       	andi	r24, 0x0F	; 15
     574:	88 b9       	out	0x08, r24	; 8
	lcd_data_port_reg |= temp;
     576:	88 b1       	in	r24, 0x08	; 8
     578:	9c 2f       	mov	r25, r28
     57a:	90 7f       	andi	r25, 0xF0	; 240
     57c:	89 2b       	or	r24, r25
     57e:	88 b9       	out	0x08, r24	; 8
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
     580:	40 9a       	sbi	0x08, 0	; 8
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
     582:	41 98       	cbi	0x08, 1	; 8
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
     584:	42 9a       	sbi	0x08, 2	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     586:	8f ef       	ldi	r24, 0xFF	; 255
     588:	97 e4       	ldi	r25, 0x47	; 71
     58a:	01 97       	sbiw	r24, 0x01	; 1
     58c:	f1 f7       	brne	.-4      	; 0x58a <lcd_wr_char+0x20>
     58e:	00 c0       	rjmp	.+0      	; 0x590 <lcd_wr_char+0x26>
     590:	00 00       	nop
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
     592:	42 98       	cbi	0x08, 2	; 8
	
	alpha_num_char = (alpha_num_char & 0x0F);
	alpha_num_char = (alpha_num_char << 4);
	lcd_data_port_reg &= 0x0F;
     594:	88 b1       	in	r24, 0x08	; 8
     596:	8f 70       	andi	r24, 0x0F	; 15
     598:	88 b9       	out	0x08, r24	; 8
	lcd_data_port_reg |= alpha_num_char;
     59a:	88 b1       	in	r24, 0x08	; 8
     59c:	c2 95       	swap	r28
     59e:	c0 7f       	andi	r28, 0xF0	; 240
     5a0:	c8 2b       	or	r28, r24
     5a2:	c8 b9       	out	0x08, r28	; 8
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
     5a4:	40 9a       	sbi	0x08, 0	; 8
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
     5a6:	41 98       	cbi	0x08, 1	; 8
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
     5a8:	42 9a       	sbi	0x08, 2	; 8
     5aa:	8f ef       	ldi	r24, 0xFF	; 255
     5ac:	97 e4       	ldi	r25, 0x47	; 71
     5ae:	01 97       	sbiw	r24, 0x01	; 1
     5b0:	f1 f7       	brne	.-4      	; 0x5ae <lcd_wr_char+0x44>
     5b2:	00 c0       	rjmp	.+0      	; 0x5b4 <lcd_wr_char+0x4a>
     5b4:	00 00       	nop
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
     5b6:	42 98       	cbi	0x08, 2	; 8
}
     5b8:	cf 91       	pop	r28
     5ba:	08 95       	ret

000005bc <lcd_string>:
 * Output: This function prints the given string on the LCD at the specified (row, column) position
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
     5bc:	0f 93       	push	r16
     5be:	1f 93       	push	r17
     5c0:	cf 93       	push	r28
     5c2:	df 93       	push	r29
     5c4:	d8 2f       	mov	r29, r24
     5c6:	c6 2f       	mov	r28, r22
     5c8:	fa 01       	movw	r30, r20
	while(*str != '\0')
     5ca:	40 81       	ld	r20, Z
     5cc:	44 23       	and	r20, r20
     5ce:	61 f0       	breq	.+24     	; 0x5e8 <lcd_string+0x2c>
     5d0:	8f 01       	movw	r16, r30
     5d2:	0f 5f       	subi	r16, 0xFF	; 255
     5d4:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		lcd_wr_char(row, column, *str);
     5d6:	6c 2f       	mov	r22, r28
     5d8:	8d 2f       	mov	r24, r29
     5da:	c7 df       	rcall	.-114    	; 0x56a <lcd_wr_char>
		str++;
		column+=1;
     5dc:	cf 5f       	subi	r28, 0xFF	; 255
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
	while(*str != '\0')
     5de:	f8 01       	movw	r30, r16
     5e0:	41 91       	ld	r20, Z+
     5e2:	8f 01       	movw	r16, r30
     5e4:	41 11       	cpse	r20, r1
     5e6:	f7 cf       	rjmp	.-18     	; 0x5d6 <lcd_string+0x1a>
	{
		lcd_wr_char(row, column, *str);
		str++;
		column+=1;
	}
}
     5e8:	df 91       	pop	r29
     5ea:	cf 91       	pop	r28
     5ec:	1f 91       	pop	r17
     5ee:	0f 91       	pop	r16
     5f0:	08 95       	ret

000005f2 <uart_init>:
 * Example Call: uart_tx();
 */
void uart_tx(char data)
{
	//while( ( UCSRA_reg & ( 1 << UDRE_bit ) ) == 0x00 );				// waiting to transmit	
	UDR_reg	= data;
     5f2:	e1 ed       	ldi	r30, 0xD1	; 209
     5f4:	f0 e0       	ldi	r31, 0x00	; 0
     5f6:	10 82       	st	Z, r1
     5f8:	90 93 d5 00 	sts	0x00D5, r25	; 0x8000d5 <__TEXT_REGION_LENGTH__+0x7000d5>
     5fc:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <__TEXT_REGION_LENGTH__+0x7000d4>
     600:	a2 ed       	ldi	r26, 0xD2	; 210
     602:	b0 e0       	ldi	r27, 0x00	; 0
     604:	8c 91       	ld	r24, X
     606:	8f 73       	andi	r24, 0x3F	; 63
     608:	8c 93       	st	X, r24
     60a:	8c 91       	ld	r24, X
     60c:	86 60       	ori	r24, 0x06	; 6
     60e:	8c 93       	st	X, r24
     610:	80 81       	ld	r24, Z
     612:	88 61       	ori	r24, 0x18	; 24
     614:	80 83       	st	Z, r24
     616:	80 81       	ld	r24, Z
     618:	8b 7f       	andi	r24, 0xFB	; 251
     61a:	80 83       	st	Z, r24
     61c:	08 95       	ret

0000061e <uart_tx_string>:
 * Output: None
 * Logic: This function sends a string over the UART
 * Example Call: uart_tx_string();
 */
void uart_tx_string(char *data)
{
     61e:	fc 01       	movw	r30, r24
	while(*data != '\0')
     620:	90 81       	ld	r25, Z
     622:	99 23       	and	r25, r25
     624:	39 f0       	breq	.+14     	; 0x634 <uart_tx_string+0x16>
     626:	31 96       	adiw	r30, 0x01	; 1
 * Example Call: uart_tx();
 */
void uart_tx(char data)
{
	//while( ( UCSRA_reg & ( 1 << UDRE_bit ) ) == 0x00 );				// waiting to transmit	
	UDR_reg	= data;
     628:	a6 ed       	ldi	r26, 0xD6	; 214
     62a:	b0 e0       	ldi	r27, 0x00	; 0
     62c:	9c 93       	st	X, r25
 * Logic: This function sends a string over the UART
 * Example Call: uart_tx_string();
 */
void uart_tx_string(char *data)
{
	while(*data != '\0')
     62e:	91 91       	ld	r25, Z+
     630:	91 11       	cpse	r25, r1
     632:	fc cf       	rjmp	.-8      	; 0x62c <uart_tx_string+0xe>
     634:	08 95       	ret

00000636 <vfprintf>:
     636:	2f 92       	push	r2
     638:	3f 92       	push	r3
     63a:	4f 92       	push	r4
     63c:	5f 92       	push	r5
     63e:	6f 92       	push	r6
     640:	7f 92       	push	r7
     642:	8f 92       	push	r8
     644:	9f 92       	push	r9
     646:	af 92       	push	r10
     648:	bf 92       	push	r11
     64a:	cf 92       	push	r12
     64c:	df 92       	push	r13
     64e:	ef 92       	push	r14
     650:	ff 92       	push	r15
     652:	0f 93       	push	r16
     654:	1f 93       	push	r17
     656:	cf 93       	push	r28
     658:	df 93       	push	r29
     65a:	cd b7       	in	r28, 0x3d	; 61
     65c:	de b7       	in	r29, 0x3e	; 62
     65e:	60 97       	sbiw	r28, 0x10	; 16
     660:	0f b6       	in	r0, 0x3f	; 63
     662:	f8 94       	cli
     664:	de bf       	out	0x3e, r29	; 62
     666:	0f be       	out	0x3f, r0	; 63
     668:	cd bf       	out	0x3d, r28	; 61
     66a:	7c 01       	movw	r14, r24
     66c:	1b 01       	movw	r2, r22
     66e:	6a 01       	movw	r12, r20
     670:	fc 01       	movw	r30, r24
     672:	17 82       	std	Z+7, r1	; 0x07
     674:	16 82       	std	Z+6, r1	; 0x06
     676:	83 81       	ldd	r24, Z+3	; 0x03
     678:	81 ff       	sbrs	r24, 1
     67a:	2a c3       	rjmp	.+1620   	; 0xcd0 <vfprintf+0x69a>
     67c:	9e 01       	movw	r18, r28
     67e:	2f 5f       	subi	r18, 0xFF	; 255
     680:	3f 4f       	sbci	r19, 0xFF	; 255
     682:	39 01       	movw	r6, r18
     684:	f7 01       	movw	r30, r14
     686:	93 81       	ldd	r25, Z+3	; 0x03
     688:	f1 01       	movw	r30, r2
     68a:	93 fd       	sbrc	r25, 3
     68c:	85 91       	lpm	r24, Z+
     68e:	93 ff       	sbrs	r25, 3
     690:	81 91       	ld	r24, Z+
     692:	1f 01       	movw	r2, r30
     694:	88 23       	and	r24, r24
     696:	09 f4       	brne	.+2      	; 0x69a <vfprintf+0x64>
     698:	17 c3       	rjmp	.+1582   	; 0xcc8 <vfprintf+0x692>
     69a:	85 32       	cpi	r24, 0x25	; 37
     69c:	39 f4       	brne	.+14     	; 0x6ac <vfprintf+0x76>
     69e:	93 fd       	sbrc	r25, 3
     6a0:	85 91       	lpm	r24, Z+
     6a2:	93 ff       	sbrs	r25, 3
     6a4:	81 91       	ld	r24, Z+
     6a6:	1f 01       	movw	r2, r30
     6a8:	85 32       	cpi	r24, 0x25	; 37
     6aa:	31 f4       	brne	.+12     	; 0x6b8 <vfprintf+0x82>
     6ac:	b7 01       	movw	r22, r14
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	39 d4       	rcall	.+2162   	; 0xf24 <fputc>
     6b2:	56 01       	movw	r10, r12
     6b4:	65 01       	movw	r12, r10
     6b6:	e6 cf       	rjmp	.-52     	; 0x684 <vfprintf+0x4e>
     6b8:	10 e0       	ldi	r17, 0x00	; 0
     6ba:	51 2c       	mov	r5, r1
     6bc:	91 2c       	mov	r9, r1
     6be:	ff e1       	ldi	r31, 0x1F	; 31
     6c0:	f9 15       	cp	r31, r9
     6c2:	d8 f0       	brcs	.+54     	; 0x6fa <vfprintf+0xc4>
     6c4:	8b 32       	cpi	r24, 0x2B	; 43
     6c6:	79 f0       	breq	.+30     	; 0x6e6 <vfprintf+0xb0>
     6c8:	38 f4       	brcc	.+14     	; 0x6d8 <vfprintf+0xa2>
     6ca:	80 32       	cpi	r24, 0x20	; 32
     6cc:	79 f0       	breq	.+30     	; 0x6ec <vfprintf+0xb6>
     6ce:	83 32       	cpi	r24, 0x23	; 35
     6d0:	a1 f4       	brne	.+40     	; 0x6fa <vfprintf+0xc4>
     6d2:	f9 2d       	mov	r31, r9
     6d4:	f0 61       	ori	r31, 0x10	; 16
     6d6:	2e c0       	rjmp	.+92     	; 0x734 <vfprintf+0xfe>
     6d8:	8d 32       	cpi	r24, 0x2D	; 45
     6da:	61 f0       	breq	.+24     	; 0x6f4 <vfprintf+0xbe>
     6dc:	80 33       	cpi	r24, 0x30	; 48
     6de:	69 f4       	brne	.+26     	; 0x6fa <vfprintf+0xc4>
     6e0:	29 2d       	mov	r18, r9
     6e2:	21 60       	ori	r18, 0x01	; 1
     6e4:	2d c0       	rjmp	.+90     	; 0x740 <vfprintf+0x10a>
     6e6:	39 2d       	mov	r19, r9
     6e8:	32 60       	ori	r19, 0x02	; 2
     6ea:	93 2e       	mov	r9, r19
     6ec:	89 2d       	mov	r24, r9
     6ee:	84 60       	ori	r24, 0x04	; 4
     6f0:	98 2e       	mov	r9, r24
     6f2:	2a c0       	rjmp	.+84     	; 0x748 <vfprintf+0x112>
     6f4:	e9 2d       	mov	r30, r9
     6f6:	e8 60       	ori	r30, 0x08	; 8
     6f8:	15 c0       	rjmp	.+42     	; 0x724 <vfprintf+0xee>
     6fa:	97 fc       	sbrc	r9, 7
     6fc:	2d c0       	rjmp	.+90     	; 0x758 <vfprintf+0x122>
     6fe:	20 ed       	ldi	r18, 0xD0	; 208
     700:	28 0f       	add	r18, r24
     702:	2a 30       	cpi	r18, 0x0A	; 10
     704:	88 f4       	brcc	.+34     	; 0x728 <vfprintf+0xf2>
     706:	96 fe       	sbrs	r9, 6
     708:	06 c0       	rjmp	.+12     	; 0x716 <vfprintf+0xe0>
     70a:	3a e0       	ldi	r19, 0x0A	; 10
     70c:	13 9f       	mul	r17, r19
     70e:	20 0d       	add	r18, r0
     710:	11 24       	eor	r1, r1
     712:	12 2f       	mov	r17, r18
     714:	19 c0       	rjmp	.+50     	; 0x748 <vfprintf+0x112>
     716:	8a e0       	ldi	r24, 0x0A	; 10
     718:	58 9e       	mul	r5, r24
     71a:	20 0d       	add	r18, r0
     71c:	11 24       	eor	r1, r1
     71e:	52 2e       	mov	r5, r18
     720:	e9 2d       	mov	r30, r9
     722:	e0 62       	ori	r30, 0x20	; 32
     724:	9e 2e       	mov	r9, r30
     726:	10 c0       	rjmp	.+32     	; 0x748 <vfprintf+0x112>
     728:	8e 32       	cpi	r24, 0x2E	; 46
     72a:	31 f4       	brne	.+12     	; 0x738 <vfprintf+0x102>
     72c:	96 fc       	sbrc	r9, 6
     72e:	cc c2       	rjmp	.+1432   	; 0xcc8 <vfprintf+0x692>
     730:	f9 2d       	mov	r31, r9
     732:	f0 64       	ori	r31, 0x40	; 64
     734:	9f 2e       	mov	r9, r31
     736:	08 c0       	rjmp	.+16     	; 0x748 <vfprintf+0x112>
     738:	8c 36       	cpi	r24, 0x6C	; 108
     73a:	21 f4       	brne	.+8      	; 0x744 <vfprintf+0x10e>
     73c:	29 2d       	mov	r18, r9
     73e:	20 68       	ori	r18, 0x80	; 128
     740:	92 2e       	mov	r9, r18
     742:	02 c0       	rjmp	.+4      	; 0x748 <vfprintf+0x112>
     744:	88 36       	cpi	r24, 0x68	; 104
     746:	41 f4       	brne	.+16     	; 0x758 <vfprintf+0x122>
     748:	f1 01       	movw	r30, r2
     74a:	93 fd       	sbrc	r25, 3
     74c:	85 91       	lpm	r24, Z+
     74e:	93 ff       	sbrs	r25, 3
     750:	81 91       	ld	r24, Z+
     752:	1f 01       	movw	r2, r30
     754:	81 11       	cpse	r24, r1
     756:	b3 cf       	rjmp	.-154    	; 0x6be <vfprintf+0x88>
     758:	9b eb       	ldi	r25, 0xBB	; 187
     75a:	98 0f       	add	r25, r24
     75c:	93 30       	cpi	r25, 0x03	; 3
     75e:	20 f4       	brcc	.+8      	; 0x768 <vfprintf+0x132>
     760:	99 2d       	mov	r25, r9
     762:	90 61       	ori	r25, 0x10	; 16
     764:	80 5e       	subi	r24, 0xE0	; 224
     766:	07 c0       	rjmp	.+14     	; 0x776 <vfprintf+0x140>
     768:	9b e9       	ldi	r25, 0x9B	; 155
     76a:	98 0f       	add	r25, r24
     76c:	93 30       	cpi	r25, 0x03	; 3
     76e:	08 f0       	brcs	.+2      	; 0x772 <vfprintf+0x13c>
     770:	59 c1       	rjmp	.+690    	; 0xa24 <vfprintf+0x3ee>
     772:	99 2d       	mov	r25, r9
     774:	9f 7e       	andi	r25, 0xEF	; 239
     776:	96 ff       	sbrs	r25, 6
     778:	16 e0       	ldi	r17, 0x06	; 6
     77a:	9f 73       	andi	r25, 0x3F	; 63
     77c:	99 2e       	mov	r9, r25
     77e:	85 36       	cpi	r24, 0x65	; 101
     780:	19 f4       	brne	.+6      	; 0x788 <vfprintf+0x152>
     782:	90 64       	ori	r25, 0x40	; 64
     784:	99 2e       	mov	r9, r25
     786:	08 c0       	rjmp	.+16     	; 0x798 <vfprintf+0x162>
     788:	86 36       	cpi	r24, 0x66	; 102
     78a:	21 f4       	brne	.+8      	; 0x794 <vfprintf+0x15e>
     78c:	39 2f       	mov	r19, r25
     78e:	30 68       	ori	r19, 0x80	; 128
     790:	93 2e       	mov	r9, r19
     792:	02 c0       	rjmp	.+4      	; 0x798 <vfprintf+0x162>
     794:	11 11       	cpse	r17, r1
     796:	11 50       	subi	r17, 0x01	; 1
     798:	97 fe       	sbrs	r9, 7
     79a:	07 c0       	rjmp	.+14     	; 0x7aa <vfprintf+0x174>
     79c:	1c 33       	cpi	r17, 0x3C	; 60
     79e:	50 f4       	brcc	.+20     	; 0x7b4 <vfprintf+0x17e>
     7a0:	44 24       	eor	r4, r4
     7a2:	43 94       	inc	r4
     7a4:	41 0e       	add	r4, r17
     7a6:	27 e0       	ldi	r18, 0x07	; 7
     7a8:	0b c0       	rjmp	.+22     	; 0x7c0 <vfprintf+0x18a>
     7aa:	18 30       	cpi	r17, 0x08	; 8
     7ac:	38 f0       	brcs	.+14     	; 0x7bc <vfprintf+0x186>
     7ae:	27 e0       	ldi	r18, 0x07	; 7
     7b0:	17 e0       	ldi	r17, 0x07	; 7
     7b2:	05 c0       	rjmp	.+10     	; 0x7be <vfprintf+0x188>
     7b4:	27 e0       	ldi	r18, 0x07	; 7
     7b6:	9c e3       	ldi	r25, 0x3C	; 60
     7b8:	49 2e       	mov	r4, r25
     7ba:	02 c0       	rjmp	.+4      	; 0x7c0 <vfprintf+0x18a>
     7bc:	21 2f       	mov	r18, r17
     7be:	41 2c       	mov	r4, r1
     7c0:	56 01       	movw	r10, r12
     7c2:	84 e0       	ldi	r24, 0x04	; 4
     7c4:	a8 0e       	add	r10, r24
     7c6:	b1 1c       	adc	r11, r1
     7c8:	f6 01       	movw	r30, r12
     7ca:	60 81       	ld	r22, Z
     7cc:	71 81       	ldd	r23, Z+1	; 0x01
     7ce:	82 81       	ldd	r24, Z+2	; 0x02
     7d0:	93 81       	ldd	r25, Z+3	; 0x03
     7d2:	04 2d       	mov	r16, r4
     7d4:	a3 01       	movw	r20, r6
     7d6:	b8 d2       	rcall	.+1392   	; 0xd48 <__ftoa_engine>
     7d8:	6c 01       	movw	r12, r24
     7da:	f9 81       	ldd	r31, Y+1	; 0x01
     7dc:	fc 87       	std	Y+12, r31	; 0x0c
     7de:	f0 ff       	sbrs	r31, 0
     7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <vfprintf+0x1b0>
     7e2:	f3 ff       	sbrs	r31, 3
     7e4:	06 c0       	rjmp	.+12     	; 0x7f2 <vfprintf+0x1bc>
     7e6:	91 fc       	sbrc	r9, 1
     7e8:	06 c0       	rjmp	.+12     	; 0x7f6 <vfprintf+0x1c0>
     7ea:	92 fe       	sbrs	r9, 2
     7ec:	06 c0       	rjmp	.+12     	; 0x7fa <vfprintf+0x1c4>
     7ee:	00 e2       	ldi	r16, 0x20	; 32
     7f0:	05 c0       	rjmp	.+10     	; 0x7fc <vfprintf+0x1c6>
     7f2:	0d e2       	ldi	r16, 0x2D	; 45
     7f4:	03 c0       	rjmp	.+6      	; 0x7fc <vfprintf+0x1c6>
     7f6:	0b e2       	ldi	r16, 0x2B	; 43
     7f8:	01 c0       	rjmp	.+2      	; 0x7fc <vfprintf+0x1c6>
     7fa:	00 e0       	ldi	r16, 0x00	; 0
     7fc:	8c 85       	ldd	r24, Y+12	; 0x0c
     7fe:	8c 70       	andi	r24, 0x0C	; 12
     800:	19 f0       	breq	.+6      	; 0x808 <vfprintf+0x1d2>
     802:	01 11       	cpse	r16, r1
     804:	43 c2       	rjmp	.+1158   	; 0xc8c <vfprintf+0x656>
     806:	80 c2       	rjmp	.+1280   	; 0xd08 <vfprintf+0x6d2>
     808:	97 fe       	sbrs	r9, 7
     80a:	10 c0       	rjmp	.+32     	; 0x82c <vfprintf+0x1f6>
     80c:	4c 0c       	add	r4, r12
     80e:	fc 85       	ldd	r31, Y+12	; 0x0c
     810:	f4 ff       	sbrs	r31, 4
     812:	04 c0       	rjmp	.+8      	; 0x81c <vfprintf+0x1e6>
     814:	8a 81       	ldd	r24, Y+2	; 0x02
     816:	81 33       	cpi	r24, 0x31	; 49
     818:	09 f4       	brne	.+2      	; 0x81c <vfprintf+0x1e6>
     81a:	4a 94       	dec	r4
     81c:	14 14       	cp	r1, r4
     81e:	74 f5       	brge	.+92     	; 0x87c <vfprintf+0x246>
     820:	28 e0       	ldi	r18, 0x08	; 8
     822:	24 15       	cp	r18, r4
     824:	78 f5       	brcc	.+94     	; 0x884 <vfprintf+0x24e>
     826:	88 e0       	ldi	r24, 0x08	; 8
     828:	48 2e       	mov	r4, r24
     82a:	2c c0       	rjmp	.+88     	; 0x884 <vfprintf+0x24e>
     82c:	96 fc       	sbrc	r9, 6
     82e:	2a c0       	rjmp	.+84     	; 0x884 <vfprintf+0x24e>
     830:	81 2f       	mov	r24, r17
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	8c 15       	cp	r24, r12
     836:	9d 05       	cpc	r25, r13
     838:	9c f0       	brlt	.+38     	; 0x860 <vfprintf+0x22a>
     83a:	3c ef       	ldi	r19, 0xFC	; 252
     83c:	c3 16       	cp	r12, r19
     83e:	3f ef       	ldi	r19, 0xFF	; 255
     840:	d3 06       	cpc	r13, r19
     842:	74 f0       	brlt	.+28     	; 0x860 <vfprintf+0x22a>
     844:	89 2d       	mov	r24, r9
     846:	80 68       	ori	r24, 0x80	; 128
     848:	98 2e       	mov	r9, r24
     84a:	0a c0       	rjmp	.+20     	; 0x860 <vfprintf+0x22a>
     84c:	e2 e0       	ldi	r30, 0x02	; 2
     84e:	f0 e0       	ldi	r31, 0x00	; 0
     850:	ec 0f       	add	r30, r28
     852:	fd 1f       	adc	r31, r29
     854:	e1 0f       	add	r30, r17
     856:	f1 1d       	adc	r31, r1
     858:	80 81       	ld	r24, Z
     85a:	80 33       	cpi	r24, 0x30	; 48
     85c:	19 f4       	brne	.+6      	; 0x864 <vfprintf+0x22e>
     85e:	11 50       	subi	r17, 0x01	; 1
     860:	11 11       	cpse	r17, r1
     862:	f4 cf       	rjmp	.-24     	; 0x84c <vfprintf+0x216>
     864:	97 fe       	sbrs	r9, 7
     866:	0e c0       	rjmp	.+28     	; 0x884 <vfprintf+0x24e>
     868:	44 24       	eor	r4, r4
     86a:	43 94       	inc	r4
     86c:	41 0e       	add	r4, r17
     86e:	81 2f       	mov	r24, r17
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	c8 16       	cp	r12, r24
     874:	d9 06       	cpc	r13, r25
     876:	2c f4       	brge	.+10     	; 0x882 <vfprintf+0x24c>
     878:	1c 19       	sub	r17, r12
     87a:	04 c0       	rjmp	.+8      	; 0x884 <vfprintf+0x24e>
     87c:	44 24       	eor	r4, r4
     87e:	43 94       	inc	r4
     880:	01 c0       	rjmp	.+2      	; 0x884 <vfprintf+0x24e>
     882:	10 e0       	ldi	r17, 0x00	; 0
     884:	97 fe       	sbrs	r9, 7
     886:	06 c0       	rjmp	.+12     	; 0x894 <vfprintf+0x25e>
     888:	1c 14       	cp	r1, r12
     88a:	1d 04       	cpc	r1, r13
     88c:	34 f4       	brge	.+12     	; 0x89a <vfprintf+0x264>
     88e:	c6 01       	movw	r24, r12
     890:	01 96       	adiw	r24, 0x01	; 1
     892:	05 c0       	rjmp	.+10     	; 0x89e <vfprintf+0x268>
     894:	85 e0       	ldi	r24, 0x05	; 5
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	02 c0       	rjmp	.+4      	; 0x89e <vfprintf+0x268>
     89a:	81 e0       	ldi	r24, 0x01	; 1
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	01 11       	cpse	r16, r1
     8a0:	01 96       	adiw	r24, 0x01	; 1
     8a2:	11 23       	and	r17, r17
     8a4:	31 f0       	breq	.+12     	; 0x8b2 <vfprintf+0x27c>
     8a6:	21 2f       	mov	r18, r17
     8a8:	30 e0       	ldi	r19, 0x00	; 0
     8aa:	2f 5f       	subi	r18, 0xFF	; 255
     8ac:	3f 4f       	sbci	r19, 0xFF	; 255
     8ae:	82 0f       	add	r24, r18
     8b0:	93 1f       	adc	r25, r19
     8b2:	25 2d       	mov	r18, r5
     8b4:	30 e0       	ldi	r19, 0x00	; 0
     8b6:	82 17       	cp	r24, r18
     8b8:	93 07       	cpc	r25, r19
     8ba:	14 f4       	brge	.+4      	; 0x8c0 <vfprintf+0x28a>
     8bc:	58 1a       	sub	r5, r24
     8be:	01 c0       	rjmp	.+2      	; 0x8c2 <vfprintf+0x28c>
     8c0:	51 2c       	mov	r5, r1
     8c2:	89 2d       	mov	r24, r9
     8c4:	89 70       	andi	r24, 0x09	; 9
     8c6:	41 f4       	brne	.+16     	; 0x8d8 <vfprintf+0x2a2>
     8c8:	55 20       	and	r5, r5
     8ca:	31 f0       	breq	.+12     	; 0x8d8 <vfprintf+0x2a2>
     8cc:	b7 01       	movw	r22, r14
     8ce:	80 e2       	ldi	r24, 0x20	; 32
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	28 d3       	rcall	.+1616   	; 0xf24 <fputc>
     8d4:	5a 94       	dec	r5
     8d6:	f8 cf       	rjmp	.-16     	; 0x8c8 <vfprintf+0x292>
     8d8:	00 23       	and	r16, r16
     8da:	21 f0       	breq	.+8      	; 0x8e4 <vfprintf+0x2ae>
     8dc:	b7 01       	movw	r22, r14
     8de:	80 2f       	mov	r24, r16
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	20 d3       	rcall	.+1600   	; 0xf24 <fputc>
     8e4:	93 fc       	sbrc	r9, 3
     8e6:	08 c0       	rjmp	.+16     	; 0x8f8 <vfprintf+0x2c2>
     8e8:	55 20       	and	r5, r5
     8ea:	31 f0       	breq	.+12     	; 0x8f8 <vfprintf+0x2c2>
     8ec:	b7 01       	movw	r22, r14
     8ee:	80 e3       	ldi	r24, 0x30	; 48
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	18 d3       	rcall	.+1584   	; 0xf24 <fputc>
     8f4:	5a 94       	dec	r5
     8f6:	f8 cf       	rjmp	.-16     	; 0x8e8 <vfprintf+0x2b2>
     8f8:	97 fe       	sbrs	r9, 7
     8fa:	4a c0       	rjmp	.+148    	; 0x990 <vfprintf+0x35a>
     8fc:	46 01       	movw	r8, r12
     8fe:	d7 fe       	sbrs	r13, 7
     900:	02 c0       	rjmp	.+4      	; 0x906 <vfprintf+0x2d0>
     902:	81 2c       	mov	r8, r1
     904:	91 2c       	mov	r9, r1
     906:	c6 01       	movw	r24, r12
     908:	88 19       	sub	r24, r8
     90a:	99 09       	sbc	r25, r9
     90c:	f3 01       	movw	r30, r6
     90e:	e8 0f       	add	r30, r24
     910:	f9 1f       	adc	r31, r25
     912:	fe 87       	std	Y+14, r31	; 0x0e
     914:	ed 87       	std	Y+13, r30	; 0x0d
     916:	96 01       	movw	r18, r12
     918:	24 19       	sub	r18, r4
     91a:	31 09       	sbc	r19, r1
     91c:	38 8b       	std	Y+16, r19	; 0x10
     91e:	2f 87       	std	Y+15, r18	; 0x0f
     920:	01 2f       	mov	r16, r17
     922:	10 e0       	ldi	r17, 0x00	; 0
     924:	11 95       	neg	r17
     926:	01 95       	neg	r16
     928:	11 09       	sbc	r17, r1
     92a:	3f ef       	ldi	r19, 0xFF	; 255
     92c:	83 16       	cp	r8, r19
     92e:	93 06       	cpc	r9, r19
     930:	21 f4       	brne	.+8      	; 0x93a <vfprintf+0x304>
     932:	b7 01       	movw	r22, r14
     934:	8e e2       	ldi	r24, 0x2E	; 46
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	f5 d2       	rcall	.+1514   	; 0xf24 <fputc>
     93a:	c8 14       	cp	r12, r8
     93c:	d9 04       	cpc	r13, r9
     93e:	4c f0       	brlt	.+18     	; 0x952 <vfprintf+0x31c>
     940:	8f 85       	ldd	r24, Y+15	; 0x0f
     942:	98 89       	ldd	r25, Y+16	; 0x10
     944:	88 15       	cp	r24, r8
     946:	99 05       	cpc	r25, r9
     948:	24 f4       	brge	.+8      	; 0x952 <vfprintf+0x31c>
     94a:	ed 85       	ldd	r30, Y+13	; 0x0d
     94c:	fe 85       	ldd	r31, Y+14	; 0x0e
     94e:	81 81       	ldd	r24, Z+1	; 0x01
     950:	01 c0       	rjmp	.+2      	; 0x954 <vfprintf+0x31e>
     952:	80 e3       	ldi	r24, 0x30	; 48
     954:	f1 e0       	ldi	r31, 0x01	; 1
     956:	8f 1a       	sub	r8, r31
     958:	91 08       	sbc	r9, r1
     95a:	2d 85       	ldd	r18, Y+13	; 0x0d
     95c:	3e 85       	ldd	r19, Y+14	; 0x0e
     95e:	2f 5f       	subi	r18, 0xFF	; 255
     960:	3f 4f       	sbci	r19, 0xFF	; 255
     962:	3e 87       	std	Y+14, r19	; 0x0e
     964:	2d 87       	std	Y+13, r18	; 0x0d
     966:	80 16       	cp	r8, r16
     968:	91 06       	cpc	r9, r17
     96a:	24 f0       	brlt	.+8      	; 0x974 <vfprintf+0x33e>
     96c:	b7 01       	movw	r22, r14
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	d9 d2       	rcall	.+1458   	; 0xf24 <fputc>
     972:	db cf       	rjmp	.-74     	; 0x92a <vfprintf+0x2f4>
     974:	c8 14       	cp	r12, r8
     976:	d9 04       	cpc	r13, r9
     978:	41 f4       	brne	.+16     	; 0x98a <vfprintf+0x354>
     97a:	9a 81       	ldd	r25, Y+2	; 0x02
     97c:	96 33       	cpi	r25, 0x36	; 54
     97e:	20 f4       	brcc	.+8      	; 0x988 <vfprintf+0x352>
     980:	95 33       	cpi	r25, 0x35	; 53
     982:	19 f4       	brne	.+6      	; 0x98a <vfprintf+0x354>
     984:	3c 85       	ldd	r19, Y+12	; 0x0c
     986:	34 ff       	sbrs	r19, 4
     988:	81 e3       	ldi	r24, 0x31	; 49
     98a:	b7 01       	movw	r22, r14
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	48 c0       	rjmp	.+144    	; 0xa20 <vfprintf+0x3ea>
     990:	8a 81       	ldd	r24, Y+2	; 0x02
     992:	81 33       	cpi	r24, 0x31	; 49
     994:	19 f0       	breq	.+6      	; 0x99c <vfprintf+0x366>
     996:	9c 85       	ldd	r25, Y+12	; 0x0c
     998:	9f 7e       	andi	r25, 0xEF	; 239
     99a:	9c 87       	std	Y+12, r25	; 0x0c
     99c:	b7 01       	movw	r22, r14
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	c1 d2       	rcall	.+1410   	; 0xf24 <fputc>
     9a2:	11 11       	cpse	r17, r1
     9a4:	05 c0       	rjmp	.+10     	; 0x9b0 <vfprintf+0x37a>
     9a6:	94 fc       	sbrc	r9, 4
     9a8:	16 c0       	rjmp	.+44     	; 0x9d6 <vfprintf+0x3a0>
     9aa:	85 e6       	ldi	r24, 0x65	; 101
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	15 c0       	rjmp	.+42     	; 0x9da <vfprintf+0x3a4>
     9b0:	b7 01       	movw	r22, r14
     9b2:	8e e2       	ldi	r24, 0x2E	; 46
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	b6 d2       	rcall	.+1388   	; 0xf24 <fputc>
     9b8:	1e 5f       	subi	r17, 0xFE	; 254
     9ba:	82 e0       	ldi	r24, 0x02	; 2
     9bc:	01 e0       	ldi	r16, 0x01	; 1
     9be:	08 0f       	add	r16, r24
     9c0:	f3 01       	movw	r30, r6
     9c2:	e8 0f       	add	r30, r24
     9c4:	f1 1d       	adc	r31, r1
     9c6:	80 81       	ld	r24, Z
     9c8:	b7 01       	movw	r22, r14
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	ab d2       	rcall	.+1366   	; 0xf24 <fputc>
     9ce:	80 2f       	mov	r24, r16
     9d0:	01 13       	cpse	r16, r17
     9d2:	f4 cf       	rjmp	.-24     	; 0x9bc <vfprintf+0x386>
     9d4:	e8 cf       	rjmp	.-48     	; 0x9a6 <vfprintf+0x370>
     9d6:	85 e4       	ldi	r24, 0x45	; 69
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	b7 01       	movw	r22, r14
     9dc:	a3 d2       	rcall	.+1350   	; 0xf24 <fputc>
     9de:	d7 fc       	sbrc	r13, 7
     9e0:	06 c0       	rjmp	.+12     	; 0x9ee <vfprintf+0x3b8>
     9e2:	c1 14       	cp	r12, r1
     9e4:	d1 04       	cpc	r13, r1
     9e6:	41 f4       	brne	.+16     	; 0x9f8 <vfprintf+0x3c2>
     9e8:	ec 85       	ldd	r30, Y+12	; 0x0c
     9ea:	e4 ff       	sbrs	r30, 4
     9ec:	05 c0       	rjmp	.+10     	; 0x9f8 <vfprintf+0x3c2>
     9ee:	d1 94       	neg	r13
     9f0:	c1 94       	neg	r12
     9f2:	d1 08       	sbc	r13, r1
     9f4:	8d e2       	ldi	r24, 0x2D	; 45
     9f6:	01 c0       	rjmp	.+2      	; 0x9fa <vfprintf+0x3c4>
     9f8:	8b e2       	ldi	r24, 0x2B	; 43
     9fa:	b7 01       	movw	r22, r14
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	92 d2       	rcall	.+1316   	; 0xf24 <fputc>
     a00:	80 e3       	ldi	r24, 0x30	; 48
     a02:	2a e0       	ldi	r18, 0x0A	; 10
     a04:	c2 16       	cp	r12, r18
     a06:	d1 04       	cpc	r13, r1
     a08:	2c f0       	brlt	.+10     	; 0xa14 <vfprintf+0x3de>
     a0a:	8f 5f       	subi	r24, 0xFF	; 255
     a0c:	fa e0       	ldi	r31, 0x0A	; 10
     a0e:	cf 1a       	sub	r12, r31
     a10:	d1 08       	sbc	r13, r1
     a12:	f7 cf       	rjmp	.-18     	; 0xa02 <vfprintf+0x3cc>
     a14:	b7 01       	movw	r22, r14
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	85 d2       	rcall	.+1290   	; 0xf24 <fputc>
     a1a:	b7 01       	movw	r22, r14
     a1c:	c6 01       	movw	r24, r12
     a1e:	c0 96       	adiw	r24, 0x30	; 48
     a20:	81 d2       	rcall	.+1282   	; 0xf24 <fputc>
     a22:	49 c1       	rjmp	.+658    	; 0xcb6 <vfprintf+0x680>
     a24:	83 36       	cpi	r24, 0x63	; 99
     a26:	31 f0       	breq	.+12     	; 0xa34 <vfprintf+0x3fe>
     a28:	83 37       	cpi	r24, 0x73	; 115
     a2a:	79 f0       	breq	.+30     	; 0xa4a <vfprintf+0x414>
     a2c:	83 35       	cpi	r24, 0x53	; 83
     a2e:	09 f0       	breq	.+2      	; 0xa32 <vfprintf+0x3fc>
     a30:	52 c0       	rjmp	.+164    	; 0xad6 <vfprintf+0x4a0>
     a32:	1f c0       	rjmp	.+62     	; 0xa72 <vfprintf+0x43c>
     a34:	56 01       	movw	r10, r12
     a36:	32 e0       	ldi	r19, 0x02	; 2
     a38:	a3 0e       	add	r10, r19
     a3a:	b1 1c       	adc	r11, r1
     a3c:	f6 01       	movw	r30, r12
     a3e:	80 81       	ld	r24, Z
     a40:	89 83       	std	Y+1, r24	; 0x01
     a42:	01 e0       	ldi	r16, 0x01	; 1
     a44:	10 e0       	ldi	r17, 0x00	; 0
     a46:	63 01       	movw	r12, r6
     a48:	11 c0       	rjmp	.+34     	; 0xa6c <vfprintf+0x436>
     a4a:	56 01       	movw	r10, r12
     a4c:	f2 e0       	ldi	r31, 0x02	; 2
     a4e:	af 0e       	add	r10, r31
     a50:	b1 1c       	adc	r11, r1
     a52:	f6 01       	movw	r30, r12
     a54:	c0 80       	ld	r12, Z
     a56:	d1 80       	ldd	r13, Z+1	; 0x01
     a58:	96 fe       	sbrs	r9, 6
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <vfprintf+0x42c>
     a5c:	61 2f       	mov	r22, r17
     a5e:	70 e0       	ldi	r23, 0x00	; 0
     a60:	02 c0       	rjmp	.+4      	; 0xa66 <vfprintf+0x430>
     a62:	6f ef       	ldi	r22, 0xFF	; 255
     a64:	7f ef       	ldi	r23, 0xFF	; 255
     a66:	c6 01       	movw	r24, r12
     a68:	52 d2       	rcall	.+1188   	; 0xf0e <strnlen>
     a6a:	8c 01       	movw	r16, r24
     a6c:	f9 2d       	mov	r31, r9
     a6e:	ff 77       	andi	r31, 0x7F	; 127
     a70:	13 c0       	rjmp	.+38     	; 0xa98 <vfprintf+0x462>
     a72:	56 01       	movw	r10, r12
     a74:	22 e0       	ldi	r18, 0x02	; 2
     a76:	a2 0e       	add	r10, r18
     a78:	b1 1c       	adc	r11, r1
     a7a:	f6 01       	movw	r30, r12
     a7c:	c0 80       	ld	r12, Z
     a7e:	d1 80       	ldd	r13, Z+1	; 0x01
     a80:	96 fe       	sbrs	r9, 6
     a82:	03 c0       	rjmp	.+6      	; 0xa8a <vfprintf+0x454>
     a84:	61 2f       	mov	r22, r17
     a86:	70 e0       	ldi	r23, 0x00	; 0
     a88:	02 c0       	rjmp	.+4      	; 0xa8e <vfprintf+0x458>
     a8a:	6f ef       	ldi	r22, 0xFF	; 255
     a8c:	7f ef       	ldi	r23, 0xFF	; 255
     a8e:	c6 01       	movw	r24, r12
     a90:	33 d2       	rcall	.+1126   	; 0xef8 <strnlen_P>
     a92:	8c 01       	movw	r16, r24
     a94:	f9 2d       	mov	r31, r9
     a96:	f0 68       	ori	r31, 0x80	; 128
     a98:	9f 2e       	mov	r9, r31
     a9a:	f3 fd       	sbrc	r31, 3
     a9c:	18 c0       	rjmp	.+48     	; 0xace <vfprintf+0x498>
     a9e:	85 2d       	mov	r24, r5
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	08 17       	cp	r16, r24
     aa4:	19 07       	cpc	r17, r25
     aa6:	98 f4       	brcc	.+38     	; 0xace <vfprintf+0x498>
     aa8:	b7 01       	movw	r22, r14
     aaa:	80 e2       	ldi	r24, 0x20	; 32
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	3a d2       	rcall	.+1140   	; 0xf24 <fputc>
     ab0:	5a 94       	dec	r5
     ab2:	f5 cf       	rjmp	.-22     	; 0xa9e <vfprintf+0x468>
     ab4:	f6 01       	movw	r30, r12
     ab6:	97 fc       	sbrc	r9, 7
     ab8:	85 91       	lpm	r24, Z+
     aba:	97 fe       	sbrs	r9, 7
     abc:	81 91       	ld	r24, Z+
     abe:	6f 01       	movw	r12, r30
     ac0:	b7 01       	movw	r22, r14
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	2f d2       	rcall	.+1118   	; 0xf24 <fputc>
     ac6:	51 10       	cpse	r5, r1
     ac8:	5a 94       	dec	r5
     aca:	01 50       	subi	r16, 0x01	; 1
     acc:	11 09       	sbc	r17, r1
     ace:	01 15       	cp	r16, r1
     ad0:	11 05       	cpc	r17, r1
     ad2:	81 f7       	brne	.-32     	; 0xab4 <vfprintf+0x47e>
     ad4:	f0 c0       	rjmp	.+480    	; 0xcb6 <vfprintf+0x680>
     ad6:	84 36       	cpi	r24, 0x64	; 100
     ad8:	11 f0       	breq	.+4      	; 0xade <vfprintf+0x4a8>
     ada:	89 36       	cpi	r24, 0x69	; 105
     adc:	59 f5       	brne	.+86     	; 0xb34 <vfprintf+0x4fe>
     ade:	56 01       	movw	r10, r12
     ae0:	97 fe       	sbrs	r9, 7
     ae2:	09 c0       	rjmp	.+18     	; 0xaf6 <vfprintf+0x4c0>
     ae4:	24 e0       	ldi	r18, 0x04	; 4
     ae6:	a2 0e       	add	r10, r18
     ae8:	b1 1c       	adc	r11, r1
     aea:	f6 01       	movw	r30, r12
     aec:	60 81       	ld	r22, Z
     aee:	71 81       	ldd	r23, Z+1	; 0x01
     af0:	82 81       	ldd	r24, Z+2	; 0x02
     af2:	93 81       	ldd	r25, Z+3	; 0x03
     af4:	0a c0       	rjmp	.+20     	; 0xb0a <vfprintf+0x4d4>
     af6:	f2 e0       	ldi	r31, 0x02	; 2
     af8:	af 0e       	add	r10, r31
     afa:	b1 1c       	adc	r11, r1
     afc:	f6 01       	movw	r30, r12
     afe:	60 81       	ld	r22, Z
     b00:	71 81       	ldd	r23, Z+1	; 0x01
     b02:	07 2e       	mov	r0, r23
     b04:	00 0c       	add	r0, r0
     b06:	88 0b       	sbc	r24, r24
     b08:	99 0b       	sbc	r25, r25
     b0a:	f9 2d       	mov	r31, r9
     b0c:	ff 76       	andi	r31, 0x6F	; 111
     b0e:	9f 2e       	mov	r9, r31
     b10:	97 ff       	sbrs	r25, 7
     b12:	09 c0       	rjmp	.+18     	; 0xb26 <vfprintf+0x4f0>
     b14:	90 95       	com	r25
     b16:	80 95       	com	r24
     b18:	70 95       	com	r23
     b1a:	61 95       	neg	r22
     b1c:	7f 4f       	sbci	r23, 0xFF	; 255
     b1e:	8f 4f       	sbci	r24, 0xFF	; 255
     b20:	9f 4f       	sbci	r25, 0xFF	; 255
     b22:	f0 68       	ori	r31, 0x80	; 128
     b24:	9f 2e       	mov	r9, r31
     b26:	2a e0       	ldi	r18, 0x0A	; 10
     b28:	30 e0       	ldi	r19, 0x00	; 0
     b2a:	a3 01       	movw	r20, r6
     b2c:	65 d2       	rcall	.+1226   	; 0xff8 <__ultoa_invert>
     b2e:	c8 2e       	mov	r12, r24
     b30:	c6 18       	sub	r12, r6
     b32:	3e c0       	rjmp	.+124    	; 0xbb0 <vfprintf+0x57a>
     b34:	09 2d       	mov	r16, r9
     b36:	85 37       	cpi	r24, 0x75	; 117
     b38:	21 f4       	brne	.+8      	; 0xb42 <vfprintf+0x50c>
     b3a:	0f 7e       	andi	r16, 0xEF	; 239
     b3c:	2a e0       	ldi	r18, 0x0A	; 10
     b3e:	30 e0       	ldi	r19, 0x00	; 0
     b40:	1d c0       	rjmp	.+58     	; 0xb7c <vfprintf+0x546>
     b42:	09 7f       	andi	r16, 0xF9	; 249
     b44:	8f 36       	cpi	r24, 0x6F	; 111
     b46:	91 f0       	breq	.+36     	; 0xb6c <vfprintf+0x536>
     b48:	18 f4       	brcc	.+6      	; 0xb50 <vfprintf+0x51a>
     b4a:	88 35       	cpi	r24, 0x58	; 88
     b4c:	59 f0       	breq	.+22     	; 0xb64 <vfprintf+0x52e>
     b4e:	bc c0       	rjmp	.+376    	; 0xcc8 <vfprintf+0x692>
     b50:	80 37       	cpi	r24, 0x70	; 112
     b52:	19 f0       	breq	.+6      	; 0xb5a <vfprintf+0x524>
     b54:	88 37       	cpi	r24, 0x78	; 120
     b56:	11 f0       	breq	.+4      	; 0xb5c <vfprintf+0x526>
     b58:	b7 c0       	rjmp	.+366    	; 0xcc8 <vfprintf+0x692>
     b5a:	00 61       	ori	r16, 0x10	; 16
     b5c:	04 ff       	sbrs	r16, 4
     b5e:	09 c0       	rjmp	.+18     	; 0xb72 <vfprintf+0x53c>
     b60:	04 60       	ori	r16, 0x04	; 4
     b62:	07 c0       	rjmp	.+14     	; 0xb72 <vfprintf+0x53c>
     b64:	94 fe       	sbrs	r9, 4
     b66:	08 c0       	rjmp	.+16     	; 0xb78 <vfprintf+0x542>
     b68:	06 60       	ori	r16, 0x06	; 6
     b6a:	06 c0       	rjmp	.+12     	; 0xb78 <vfprintf+0x542>
     b6c:	28 e0       	ldi	r18, 0x08	; 8
     b6e:	30 e0       	ldi	r19, 0x00	; 0
     b70:	05 c0       	rjmp	.+10     	; 0xb7c <vfprintf+0x546>
     b72:	20 e1       	ldi	r18, 0x10	; 16
     b74:	30 e0       	ldi	r19, 0x00	; 0
     b76:	02 c0       	rjmp	.+4      	; 0xb7c <vfprintf+0x546>
     b78:	20 e1       	ldi	r18, 0x10	; 16
     b7a:	32 e0       	ldi	r19, 0x02	; 2
     b7c:	56 01       	movw	r10, r12
     b7e:	07 ff       	sbrs	r16, 7
     b80:	09 c0       	rjmp	.+18     	; 0xb94 <vfprintf+0x55e>
     b82:	84 e0       	ldi	r24, 0x04	; 4
     b84:	a8 0e       	add	r10, r24
     b86:	b1 1c       	adc	r11, r1
     b88:	f6 01       	movw	r30, r12
     b8a:	60 81       	ld	r22, Z
     b8c:	71 81       	ldd	r23, Z+1	; 0x01
     b8e:	82 81       	ldd	r24, Z+2	; 0x02
     b90:	93 81       	ldd	r25, Z+3	; 0x03
     b92:	08 c0       	rjmp	.+16     	; 0xba4 <vfprintf+0x56e>
     b94:	f2 e0       	ldi	r31, 0x02	; 2
     b96:	af 0e       	add	r10, r31
     b98:	b1 1c       	adc	r11, r1
     b9a:	f6 01       	movw	r30, r12
     b9c:	60 81       	ld	r22, Z
     b9e:	71 81       	ldd	r23, Z+1	; 0x01
     ba0:	80 e0       	ldi	r24, 0x00	; 0
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	a3 01       	movw	r20, r6
     ba6:	28 d2       	rcall	.+1104   	; 0xff8 <__ultoa_invert>
     ba8:	c8 2e       	mov	r12, r24
     baa:	c6 18       	sub	r12, r6
     bac:	0f 77       	andi	r16, 0x7F	; 127
     bae:	90 2e       	mov	r9, r16
     bb0:	96 fe       	sbrs	r9, 6
     bb2:	0b c0       	rjmp	.+22     	; 0xbca <vfprintf+0x594>
     bb4:	09 2d       	mov	r16, r9
     bb6:	0e 7f       	andi	r16, 0xFE	; 254
     bb8:	c1 16       	cp	r12, r17
     bba:	50 f4       	brcc	.+20     	; 0xbd0 <vfprintf+0x59a>
     bbc:	94 fe       	sbrs	r9, 4
     bbe:	0a c0       	rjmp	.+20     	; 0xbd4 <vfprintf+0x59e>
     bc0:	92 fc       	sbrc	r9, 2
     bc2:	08 c0       	rjmp	.+16     	; 0xbd4 <vfprintf+0x59e>
     bc4:	09 2d       	mov	r16, r9
     bc6:	0e 7e       	andi	r16, 0xEE	; 238
     bc8:	05 c0       	rjmp	.+10     	; 0xbd4 <vfprintf+0x59e>
     bca:	dc 2c       	mov	r13, r12
     bcc:	09 2d       	mov	r16, r9
     bce:	03 c0       	rjmp	.+6      	; 0xbd6 <vfprintf+0x5a0>
     bd0:	dc 2c       	mov	r13, r12
     bd2:	01 c0       	rjmp	.+2      	; 0xbd6 <vfprintf+0x5a0>
     bd4:	d1 2e       	mov	r13, r17
     bd6:	04 ff       	sbrs	r16, 4
     bd8:	0d c0       	rjmp	.+26     	; 0xbf4 <vfprintf+0x5be>
     bda:	fe 01       	movw	r30, r28
     bdc:	ec 0d       	add	r30, r12
     bde:	f1 1d       	adc	r31, r1
     be0:	80 81       	ld	r24, Z
     be2:	80 33       	cpi	r24, 0x30	; 48
     be4:	11 f4       	brne	.+4      	; 0xbea <vfprintf+0x5b4>
     be6:	09 7e       	andi	r16, 0xE9	; 233
     be8:	09 c0       	rjmp	.+18     	; 0xbfc <vfprintf+0x5c6>
     bea:	02 ff       	sbrs	r16, 2
     bec:	06 c0       	rjmp	.+12     	; 0xbfa <vfprintf+0x5c4>
     bee:	d3 94       	inc	r13
     bf0:	d3 94       	inc	r13
     bf2:	04 c0       	rjmp	.+8      	; 0xbfc <vfprintf+0x5c6>
     bf4:	80 2f       	mov	r24, r16
     bf6:	86 78       	andi	r24, 0x86	; 134
     bf8:	09 f0       	breq	.+2      	; 0xbfc <vfprintf+0x5c6>
     bfa:	d3 94       	inc	r13
     bfc:	03 fd       	sbrc	r16, 3
     bfe:	10 c0       	rjmp	.+32     	; 0xc20 <vfprintf+0x5ea>
     c00:	00 ff       	sbrs	r16, 0
     c02:	06 c0       	rjmp	.+12     	; 0xc10 <vfprintf+0x5da>
     c04:	1c 2d       	mov	r17, r12
     c06:	d5 14       	cp	r13, r5
     c08:	78 f4       	brcc	.+30     	; 0xc28 <vfprintf+0x5f2>
     c0a:	15 0d       	add	r17, r5
     c0c:	1d 19       	sub	r17, r13
     c0e:	0c c0       	rjmp	.+24     	; 0xc28 <vfprintf+0x5f2>
     c10:	d5 14       	cp	r13, r5
     c12:	50 f4       	brcc	.+20     	; 0xc28 <vfprintf+0x5f2>
     c14:	b7 01       	movw	r22, r14
     c16:	80 e2       	ldi	r24, 0x20	; 32
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	84 d1       	rcall	.+776    	; 0xf24 <fputc>
     c1c:	d3 94       	inc	r13
     c1e:	f8 cf       	rjmp	.-16     	; 0xc10 <vfprintf+0x5da>
     c20:	d5 14       	cp	r13, r5
     c22:	10 f4       	brcc	.+4      	; 0xc28 <vfprintf+0x5f2>
     c24:	5d 18       	sub	r5, r13
     c26:	01 c0       	rjmp	.+2      	; 0xc2a <vfprintf+0x5f4>
     c28:	51 2c       	mov	r5, r1
     c2a:	04 ff       	sbrs	r16, 4
     c2c:	0f c0       	rjmp	.+30     	; 0xc4c <vfprintf+0x616>
     c2e:	b7 01       	movw	r22, r14
     c30:	80 e3       	ldi	r24, 0x30	; 48
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	77 d1       	rcall	.+750    	; 0xf24 <fputc>
     c36:	02 ff       	sbrs	r16, 2
     c38:	16 c0       	rjmp	.+44     	; 0xc66 <vfprintf+0x630>
     c3a:	01 fd       	sbrc	r16, 1
     c3c:	03 c0       	rjmp	.+6      	; 0xc44 <vfprintf+0x60e>
     c3e:	88 e7       	ldi	r24, 0x78	; 120
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	02 c0       	rjmp	.+4      	; 0xc48 <vfprintf+0x612>
     c44:	88 e5       	ldi	r24, 0x58	; 88
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	b7 01       	movw	r22, r14
     c4a:	0c c0       	rjmp	.+24     	; 0xc64 <vfprintf+0x62e>
     c4c:	80 2f       	mov	r24, r16
     c4e:	86 78       	andi	r24, 0x86	; 134
     c50:	51 f0       	breq	.+20     	; 0xc66 <vfprintf+0x630>
     c52:	01 ff       	sbrs	r16, 1
     c54:	02 c0       	rjmp	.+4      	; 0xc5a <vfprintf+0x624>
     c56:	8b e2       	ldi	r24, 0x2B	; 43
     c58:	01 c0       	rjmp	.+2      	; 0xc5c <vfprintf+0x626>
     c5a:	80 e2       	ldi	r24, 0x20	; 32
     c5c:	07 fd       	sbrc	r16, 7
     c5e:	8d e2       	ldi	r24, 0x2D	; 45
     c60:	b7 01       	movw	r22, r14
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	5f d1       	rcall	.+702    	; 0xf24 <fputc>
     c66:	c1 16       	cp	r12, r17
     c68:	30 f4       	brcc	.+12     	; 0xc76 <vfprintf+0x640>
     c6a:	b7 01       	movw	r22, r14
     c6c:	80 e3       	ldi	r24, 0x30	; 48
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	59 d1       	rcall	.+690    	; 0xf24 <fputc>
     c72:	11 50       	subi	r17, 0x01	; 1
     c74:	f8 cf       	rjmp	.-16     	; 0xc66 <vfprintf+0x630>
     c76:	ca 94       	dec	r12
     c78:	f3 01       	movw	r30, r6
     c7a:	ec 0d       	add	r30, r12
     c7c:	f1 1d       	adc	r31, r1
     c7e:	80 81       	ld	r24, Z
     c80:	b7 01       	movw	r22, r14
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	4f d1       	rcall	.+670    	; 0xf24 <fputc>
     c86:	c1 10       	cpse	r12, r1
     c88:	f6 cf       	rjmp	.-20     	; 0xc76 <vfprintf+0x640>
     c8a:	15 c0       	rjmp	.+42     	; 0xcb6 <vfprintf+0x680>
     c8c:	f4 e0       	ldi	r31, 0x04	; 4
     c8e:	f5 15       	cp	r31, r5
     c90:	50 f5       	brcc	.+84     	; 0xce6 <vfprintf+0x6b0>
     c92:	84 e0       	ldi	r24, 0x04	; 4
     c94:	58 1a       	sub	r5, r24
     c96:	93 fe       	sbrs	r9, 3
     c98:	1e c0       	rjmp	.+60     	; 0xcd6 <vfprintf+0x6a0>
     c9a:	01 11       	cpse	r16, r1
     c9c:	25 c0       	rjmp	.+74     	; 0xce8 <vfprintf+0x6b2>
     c9e:	2c 85       	ldd	r18, Y+12	; 0x0c
     ca0:	23 ff       	sbrs	r18, 3
     ca2:	27 c0       	rjmp	.+78     	; 0xcf2 <vfprintf+0x6bc>
     ca4:	04 ee       	ldi	r16, 0xE4	; 228
     ca6:	10 e0       	ldi	r17, 0x00	; 0
     ca8:	39 2d       	mov	r19, r9
     caa:	30 71       	andi	r19, 0x10	; 16
     cac:	93 2e       	mov	r9, r19
     cae:	f8 01       	movw	r30, r16
     cb0:	84 91       	lpm	r24, Z
     cb2:	81 11       	cpse	r24, r1
     cb4:	21 c0       	rjmp	.+66     	; 0xcf8 <vfprintf+0x6c2>
     cb6:	55 20       	and	r5, r5
     cb8:	09 f4       	brne	.+2      	; 0xcbc <vfprintf+0x686>
     cba:	fc cc       	rjmp	.-1544   	; 0x6b4 <vfprintf+0x7e>
     cbc:	b7 01       	movw	r22, r14
     cbe:	80 e2       	ldi	r24, 0x20	; 32
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	30 d1       	rcall	.+608    	; 0xf24 <fputc>
     cc4:	5a 94       	dec	r5
     cc6:	f7 cf       	rjmp	.-18     	; 0xcb6 <vfprintf+0x680>
     cc8:	f7 01       	movw	r30, r14
     cca:	86 81       	ldd	r24, Z+6	; 0x06
     ccc:	97 81       	ldd	r25, Z+7	; 0x07
     cce:	23 c0       	rjmp	.+70     	; 0xd16 <vfprintf+0x6e0>
     cd0:	8f ef       	ldi	r24, 0xFF	; 255
     cd2:	9f ef       	ldi	r25, 0xFF	; 255
     cd4:	20 c0       	rjmp	.+64     	; 0xd16 <vfprintf+0x6e0>
     cd6:	b7 01       	movw	r22, r14
     cd8:	80 e2       	ldi	r24, 0x20	; 32
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	23 d1       	rcall	.+582    	; 0xf24 <fputc>
     cde:	5a 94       	dec	r5
     ce0:	51 10       	cpse	r5, r1
     ce2:	f9 cf       	rjmp	.-14     	; 0xcd6 <vfprintf+0x6a0>
     ce4:	da cf       	rjmp	.-76     	; 0xc9a <vfprintf+0x664>
     ce6:	51 2c       	mov	r5, r1
     ce8:	b7 01       	movw	r22, r14
     cea:	80 2f       	mov	r24, r16
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	1a d1       	rcall	.+564    	; 0xf24 <fputc>
     cf0:	d6 cf       	rjmp	.-84     	; 0xc9e <vfprintf+0x668>
     cf2:	08 ee       	ldi	r16, 0xE8	; 232
     cf4:	10 e0       	ldi	r17, 0x00	; 0
     cf6:	d8 cf       	rjmp	.-80     	; 0xca8 <vfprintf+0x672>
     cf8:	91 10       	cpse	r9, r1
     cfa:	80 52       	subi	r24, 0x20	; 32
     cfc:	b7 01       	movw	r22, r14
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	11 d1       	rcall	.+546    	; 0xf24 <fputc>
     d02:	0f 5f       	subi	r16, 0xFF	; 255
     d04:	1f 4f       	sbci	r17, 0xFF	; 255
     d06:	d3 cf       	rjmp	.-90     	; 0xcae <vfprintf+0x678>
     d08:	23 e0       	ldi	r18, 0x03	; 3
     d0a:	25 15       	cp	r18, r5
     d0c:	10 f4       	brcc	.+4      	; 0xd12 <vfprintf+0x6dc>
     d0e:	83 e0       	ldi	r24, 0x03	; 3
     d10:	c1 cf       	rjmp	.-126    	; 0xc94 <vfprintf+0x65e>
     d12:	51 2c       	mov	r5, r1
     d14:	c4 cf       	rjmp	.-120    	; 0xc9e <vfprintf+0x668>
     d16:	60 96       	adiw	r28, 0x10	; 16
     d18:	0f b6       	in	r0, 0x3f	; 63
     d1a:	f8 94       	cli
     d1c:	de bf       	out	0x3e, r29	; 62
     d1e:	0f be       	out	0x3f, r0	; 63
     d20:	cd bf       	out	0x3d, r28	; 61
     d22:	df 91       	pop	r29
     d24:	cf 91       	pop	r28
     d26:	1f 91       	pop	r17
     d28:	0f 91       	pop	r16
     d2a:	ff 90       	pop	r15
     d2c:	ef 90       	pop	r14
     d2e:	df 90       	pop	r13
     d30:	cf 90       	pop	r12
     d32:	bf 90       	pop	r11
     d34:	af 90       	pop	r10
     d36:	9f 90       	pop	r9
     d38:	8f 90       	pop	r8
     d3a:	7f 90       	pop	r7
     d3c:	6f 90       	pop	r6
     d3e:	5f 90       	pop	r5
     d40:	4f 90       	pop	r4
     d42:	3f 90       	pop	r3
     d44:	2f 90       	pop	r2
     d46:	08 95       	ret

00000d48 <__ftoa_engine>:
     d48:	28 30       	cpi	r18, 0x08	; 8
     d4a:	08 f0       	brcs	.+2      	; 0xd4e <__ftoa_engine+0x6>
     d4c:	27 e0       	ldi	r18, 0x07	; 7
     d4e:	33 27       	eor	r19, r19
     d50:	da 01       	movw	r26, r20
     d52:	99 0f       	add	r25, r25
     d54:	31 1d       	adc	r19, r1
     d56:	87 fd       	sbrc	r24, 7
     d58:	91 60       	ori	r25, 0x01	; 1
     d5a:	00 96       	adiw	r24, 0x00	; 0
     d5c:	61 05       	cpc	r22, r1
     d5e:	71 05       	cpc	r23, r1
     d60:	39 f4       	brne	.+14     	; 0xd70 <__ftoa_engine+0x28>
     d62:	32 60       	ori	r19, 0x02	; 2
     d64:	2e 5f       	subi	r18, 0xFE	; 254
     d66:	3d 93       	st	X+, r19
     d68:	30 e3       	ldi	r19, 0x30	; 48
     d6a:	2a 95       	dec	r18
     d6c:	e1 f7       	brne	.-8      	; 0xd66 <__ftoa_engine+0x1e>
     d6e:	08 95       	ret
     d70:	9f 3f       	cpi	r25, 0xFF	; 255
     d72:	30 f0       	brcs	.+12     	; 0xd80 <__ftoa_engine+0x38>
     d74:	80 38       	cpi	r24, 0x80	; 128
     d76:	71 05       	cpc	r23, r1
     d78:	61 05       	cpc	r22, r1
     d7a:	09 f0       	breq	.+2      	; 0xd7e <__ftoa_engine+0x36>
     d7c:	3c 5f       	subi	r19, 0xFC	; 252
     d7e:	3c 5f       	subi	r19, 0xFC	; 252
     d80:	3d 93       	st	X+, r19
     d82:	91 30       	cpi	r25, 0x01	; 1
     d84:	08 f0       	brcs	.+2      	; 0xd88 <__ftoa_engine+0x40>
     d86:	80 68       	ori	r24, 0x80	; 128
     d88:	91 1d       	adc	r25, r1
     d8a:	df 93       	push	r29
     d8c:	cf 93       	push	r28
     d8e:	1f 93       	push	r17
     d90:	0f 93       	push	r16
     d92:	ff 92       	push	r15
     d94:	ef 92       	push	r14
     d96:	19 2f       	mov	r17, r25
     d98:	98 7f       	andi	r25, 0xF8	; 248
     d9a:	96 95       	lsr	r25
     d9c:	e9 2f       	mov	r30, r25
     d9e:	96 95       	lsr	r25
     da0:	96 95       	lsr	r25
     da2:	e9 0f       	add	r30, r25
     da4:	ff 27       	eor	r31, r31
     da6:	ea 5b       	subi	r30, 0xBA	; 186
     da8:	fe 4f       	sbci	r31, 0xFE	; 254
     daa:	99 27       	eor	r25, r25
     dac:	33 27       	eor	r19, r19
     dae:	ee 24       	eor	r14, r14
     db0:	ff 24       	eor	r15, r15
     db2:	a7 01       	movw	r20, r14
     db4:	e7 01       	movw	r28, r14
     db6:	05 90       	lpm	r0, Z+
     db8:	08 94       	sec
     dba:	07 94       	ror	r0
     dbc:	28 f4       	brcc	.+10     	; 0xdc8 <__ftoa_engine+0x80>
     dbe:	36 0f       	add	r19, r22
     dc0:	e7 1e       	adc	r14, r23
     dc2:	f8 1e       	adc	r15, r24
     dc4:	49 1f       	adc	r20, r25
     dc6:	51 1d       	adc	r21, r1
     dc8:	66 0f       	add	r22, r22
     dca:	77 1f       	adc	r23, r23
     dcc:	88 1f       	adc	r24, r24
     dce:	99 1f       	adc	r25, r25
     dd0:	06 94       	lsr	r0
     dd2:	a1 f7       	brne	.-24     	; 0xdbc <__ftoa_engine+0x74>
     dd4:	05 90       	lpm	r0, Z+
     dd6:	07 94       	ror	r0
     dd8:	28 f4       	brcc	.+10     	; 0xde4 <__ftoa_engine+0x9c>
     dda:	e7 0e       	add	r14, r23
     ddc:	f8 1e       	adc	r15, r24
     dde:	49 1f       	adc	r20, r25
     de0:	56 1f       	adc	r21, r22
     de2:	c1 1d       	adc	r28, r1
     de4:	77 0f       	add	r23, r23
     de6:	88 1f       	adc	r24, r24
     de8:	99 1f       	adc	r25, r25
     dea:	66 1f       	adc	r22, r22
     dec:	06 94       	lsr	r0
     dee:	a1 f7       	brne	.-24     	; 0xdd8 <__ftoa_engine+0x90>
     df0:	05 90       	lpm	r0, Z+
     df2:	07 94       	ror	r0
     df4:	28 f4       	brcc	.+10     	; 0xe00 <__ftoa_engine+0xb8>
     df6:	f8 0e       	add	r15, r24
     df8:	49 1f       	adc	r20, r25
     dfa:	56 1f       	adc	r21, r22
     dfc:	c7 1f       	adc	r28, r23
     dfe:	d1 1d       	adc	r29, r1
     e00:	88 0f       	add	r24, r24
     e02:	99 1f       	adc	r25, r25
     e04:	66 1f       	adc	r22, r22
     e06:	77 1f       	adc	r23, r23
     e08:	06 94       	lsr	r0
     e0a:	a1 f7       	brne	.-24     	; 0xdf4 <__ftoa_engine+0xac>
     e0c:	05 90       	lpm	r0, Z+
     e0e:	07 94       	ror	r0
     e10:	20 f4       	brcc	.+8      	; 0xe1a <__ftoa_engine+0xd2>
     e12:	49 0f       	add	r20, r25
     e14:	56 1f       	adc	r21, r22
     e16:	c7 1f       	adc	r28, r23
     e18:	d8 1f       	adc	r29, r24
     e1a:	99 0f       	add	r25, r25
     e1c:	66 1f       	adc	r22, r22
     e1e:	77 1f       	adc	r23, r23
     e20:	88 1f       	adc	r24, r24
     e22:	06 94       	lsr	r0
     e24:	a9 f7       	brne	.-22     	; 0xe10 <__ftoa_engine+0xc8>
     e26:	84 91       	lpm	r24, Z
     e28:	10 95       	com	r17
     e2a:	17 70       	andi	r17, 0x07	; 7
     e2c:	41 f0       	breq	.+16     	; 0xe3e <__ftoa_engine+0xf6>
     e2e:	d6 95       	lsr	r29
     e30:	c7 95       	ror	r28
     e32:	57 95       	ror	r21
     e34:	47 95       	ror	r20
     e36:	f7 94       	ror	r15
     e38:	e7 94       	ror	r14
     e3a:	1a 95       	dec	r17
     e3c:	c1 f7       	brne	.-16     	; 0xe2e <__ftoa_engine+0xe6>
     e3e:	ec ee       	ldi	r30, 0xEC	; 236
     e40:	f0 e0       	ldi	r31, 0x00	; 0
     e42:	68 94       	set
     e44:	15 90       	lpm	r1, Z+
     e46:	15 91       	lpm	r17, Z+
     e48:	35 91       	lpm	r19, Z+
     e4a:	65 91       	lpm	r22, Z+
     e4c:	95 91       	lpm	r25, Z+
     e4e:	05 90       	lpm	r0, Z+
     e50:	7f e2       	ldi	r23, 0x2F	; 47
     e52:	73 95       	inc	r23
     e54:	e1 18       	sub	r14, r1
     e56:	f1 0a       	sbc	r15, r17
     e58:	43 0b       	sbc	r20, r19
     e5a:	56 0b       	sbc	r21, r22
     e5c:	c9 0b       	sbc	r28, r25
     e5e:	d0 09       	sbc	r29, r0
     e60:	c0 f7       	brcc	.-16     	; 0xe52 <__ftoa_engine+0x10a>
     e62:	e1 0c       	add	r14, r1
     e64:	f1 1e       	adc	r15, r17
     e66:	43 1f       	adc	r20, r19
     e68:	56 1f       	adc	r21, r22
     e6a:	c9 1f       	adc	r28, r25
     e6c:	d0 1d       	adc	r29, r0
     e6e:	7e f4       	brtc	.+30     	; 0xe8e <__ftoa_engine+0x146>
     e70:	70 33       	cpi	r23, 0x30	; 48
     e72:	11 f4       	brne	.+4      	; 0xe78 <__ftoa_engine+0x130>
     e74:	8a 95       	dec	r24
     e76:	e6 cf       	rjmp	.-52     	; 0xe44 <__ftoa_engine+0xfc>
     e78:	e8 94       	clt
     e7a:	01 50       	subi	r16, 0x01	; 1
     e7c:	30 f0       	brcs	.+12     	; 0xe8a <__ftoa_engine+0x142>
     e7e:	08 0f       	add	r16, r24
     e80:	0a f4       	brpl	.+2      	; 0xe84 <__ftoa_engine+0x13c>
     e82:	00 27       	eor	r16, r16
     e84:	02 17       	cp	r16, r18
     e86:	08 f4       	brcc	.+2      	; 0xe8a <__ftoa_engine+0x142>
     e88:	20 2f       	mov	r18, r16
     e8a:	23 95       	inc	r18
     e8c:	02 2f       	mov	r16, r18
     e8e:	7a 33       	cpi	r23, 0x3A	; 58
     e90:	28 f0       	brcs	.+10     	; 0xe9c <__ftoa_engine+0x154>
     e92:	79 e3       	ldi	r23, 0x39	; 57
     e94:	7d 93       	st	X+, r23
     e96:	2a 95       	dec	r18
     e98:	e9 f7       	brne	.-6      	; 0xe94 <__ftoa_engine+0x14c>
     e9a:	10 c0       	rjmp	.+32     	; 0xebc <__ftoa_engine+0x174>
     e9c:	7d 93       	st	X+, r23
     e9e:	2a 95       	dec	r18
     ea0:	89 f6       	brne	.-94     	; 0xe44 <__ftoa_engine+0xfc>
     ea2:	06 94       	lsr	r0
     ea4:	97 95       	ror	r25
     ea6:	67 95       	ror	r22
     ea8:	37 95       	ror	r19
     eaa:	17 95       	ror	r17
     eac:	17 94       	ror	r1
     eae:	e1 18       	sub	r14, r1
     eb0:	f1 0a       	sbc	r15, r17
     eb2:	43 0b       	sbc	r20, r19
     eb4:	56 0b       	sbc	r21, r22
     eb6:	c9 0b       	sbc	r28, r25
     eb8:	d0 09       	sbc	r29, r0
     eba:	98 f0       	brcs	.+38     	; 0xee2 <__ftoa_engine+0x19a>
     ebc:	23 95       	inc	r18
     ebe:	7e 91       	ld	r23, -X
     ec0:	73 95       	inc	r23
     ec2:	7a 33       	cpi	r23, 0x3A	; 58
     ec4:	08 f0       	brcs	.+2      	; 0xec8 <__ftoa_engine+0x180>
     ec6:	70 e3       	ldi	r23, 0x30	; 48
     ec8:	7c 93       	st	X, r23
     eca:	20 13       	cpse	r18, r16
     ecc:	b8 f7       	brcc	.-18     	; 0xebc <__ftoa_engine+0x174>
     ece:	7e 91       	ld	r23, -X
     ed0:	70 61       	ori	r23, 0x10	; 16
     ed2:	7d 93       	st	X+, r23
     ed4:	30 f0       	brcs	.+12     	; 0xee2 <__ftoa_engine+0x19a>
     ed6:	83 95       	inc	r24
     ed8:	71 e3       	ldi	r23, 0x31	; 49
     eda:	7d 93       	st	X+, r23
     edc:	70 e3       	ldi	r23, 0x30	; 48
     ede:	2a 95       	dec	r18
     ee0:	e1 f7       	brne	.-8      	; 0xeda <__ftoa_engine+0x192>
     ee2:	11 24       	eor	r1, r1
     ee4:	ef 90       	pop	r14
     ee6:	ff 90       	pop	r15
     ee8:	0f 91       	pop	r16
     eea:	1f 91       	pop	r17
     eec:	cf 91       	pop	r28
     eee:	df 91       	pop	r29
     ef0:	99 27       	eor	r25, r25
     ef2:	87 fd       	sbrc	r24, 7
     ef4:	90 95       	com	r25
     ef6:	08 95       	ret

00000ef8 <strnlen_P>:
     ef8:	fc 01       	movw	r30, r24
     efa:	05 90       	lpm	r0, Z+
     efc:	61 50       	subi	r22, 0x01	; 1
     efe:	70 40       	sbci	r23, 0x00	; 0
     f00:	01 10       	cpse	r0, r1
     f02:	d8 f7       	brcc	.-10     	; 0xefa <strnlen_P+0x2>
     f04:	80 95       	com	r24
     f06:	90 95       	com	r25
     f08:	8e 0f       	add	r24, r30
     f0a:	9f 1f       	adc	r25, r31
     f0c:	08 95       	ret

00000f0e <strnlen>:
     f0e:	fc 01       	movw	r30, r24
     f10:	61 50       	subi	r22, 0x01	; 1
     f12:	70 40       	sbci	r23, 0x00	; 0
     f14:	01 90       	ld	r0, Z+
     f16:	01 10       	cpse	r0, r1
     f18:	d8 f7       	brcc	.-10     	; 0xf10 <strnlen+0x2>
     f1a:	80 95       	com	r24
     f1c:	90 95       	com	r25
     f1e:	8e 0f       	add	r24, r30
     f20:	9f 1f       	adc	r25, r31
     f22:	08 95       	ret

00000f24 <fputc>:
     f24:	0f 93       	push	r16
     f26:	1f 93       	push	r17
     f28:	cf 93       	push	r28
     f2a:	df 93       	push	r29
     f2c:	fb 01       	movw	r30, r22
     f2e:	23 81       	ldd	r18, Z+3	; 0x03
     f30:	21 fd       	sbrc	r18, 1
     f32:	03 c0       	rjmp	.+6      	; 0xf3a <fputc+0x16>
     f34:	8f ef       	ldi	r24, 0xFF	; 255
     f36:	9f ef       	ldi	r25, 0xFF	; 255
     f38:	2c c0       	rjmp	.+88     	; 0xf92 <fputc+0x6e>
     f3a:	22 ff       	sbrs	r18, 2
     f3c:	16 c0       	rjmp	.+44     	; 0xf6a <fputc+0x46>
     f3e:	46 81       	ldd	r20, Z+6	; 0x06
     f40:	57 81       	ldd	r21, Z+7	; 0x07
     f42:	24 81       	ldd	r18, Z+4	; 0x04
     f44:	35 81       	ldd	r19, Z+5	; 0x05
     f46:	42 17       	cp	r20, r18
     f48:	53 07       	cpc	r21, r19
     f4a:	44 f4       	brge	.+16     	; 0xf5c <fputc+0x38>
     f4c:	a0 81       	ld	r26, Z
     f4e:	b1 81       	ldd	r27, Z+1	; 0x01
     f50:	9d 01       	movw	r18, r26
     f52:	2f 5f       	subi	r18, 0xFF	; 255
     f54:	3f 4f       	sbci	r19, 0xFF	; 255
     f56:	31 83       	std	Z+1, r19	; 0x01
     f58:	20 83       	st	Z, r18
     f5a:	8c 93       	st	X, r24
     f5c:	26 81       	ldd	r18, Z+6	; 0x06
     f5e:	37 81       	ldd	r19, Z+7	; 0x07
     f60:	2f 5f       	subi	r18, 0xFF	; 255
     f62:	3f 4f       	sbci	r19, 0xFF	; 255
     f64:	37 83       	std	Z+7, r19	; 0x07
     f66:	26 83       	std	Z+6, r18	; 0x06
     f68:	14 c0       	rjmp	.+40     	; 0xf92 <fputc+0x6e>
     f6a:	8b 01       	movw	r16, r22
     f6c:	ec 01       	movw	r28, r24
     f6e:	fb 01       	movw	r30, r22
     f70:	00 84       	ldd	r0, Z+8	; 0x08
     f72:	f1 85       	ldd	r31, Z+9	; 0x09
     f74:	e0 2d       	mov	r30, r0
     f76:	19 95       	eicall
     f78:	89 2b       	or	r24, r25
     f7a:	e1 f6       	brne	.-72     	; 0xf34 <fputc+0x10>
     f7c:	d8 01       	movw	r26, r16
     f7e:	16 96       	adiw	r26, 0x06	; 6
     f80:	8d 91       	ld	r24, X+
     f82:	9c 91       	ld	r25, X
     f84:	17 97       	sbiw	r26, 0x07	; 7
     f86:	01 96       	adiw	r24, 0x01	; 1
     f88:	17 96       	adiw	r26, 0x07	; 7
     f8a:	9c 93       	st	X, r25
     f8c:	8e 93       	st	-X, r24
     f8e:	16 97       	sbiw	r26, 0x06	; 6
     f90:	ce 01       	movw	r24, r28
     f92:	df 91       	pop	r29
     f94:	cf 91       	pop	r28
     f96:	1f 91       	pop	r17
     f98:	0f 91       	pop	r16
     f9a:	08 95       	ret

00000f9c <sprintf>:
     f9c:	0f 93       	push	r16
     f9e:	1f 93       	push	r17
     fa0:	cf 93       	push	r28
     fa2:	df 93       	push	r29
     fa4:	cd b7       	in	r28, 0x3d	; 61
     fa6:	de b7       	in	r29, 0x3e	; 62
     fa8:	2e 97       	sbiw	r28, 0x0e	; 14
     faa:	0f b6       	in	r0, 0x3f	; 63
     fac:	f8 94       	cli
     fae:	de bf       	out	0x3e, r29	; 62
     fb0:	0f be       	out	0x3f, r0	; 63
     fb2:	cd bf       	out	0x3d, r28	; 61
     fb4:	0e 89       	ldd	r16, Y+22	; 0x16
     fb6:	1f 89       	ldd	r17, Y+23	; 0x17
     fb8:	86 e0       	ldi	r24, 0x06	; 6
     fba:	8c 83       	std	Y+4, r24	; 0x04
     fbc:	1a 83       	std	Y+2, r17	; 0x02
     fbe:	09 83       	std	Y+1, r16	; 0x01
     fc0:	8f ef       	ldi	r24, 0xFF	; 255
     fc2:	9f e7       	ldi	r25, 0x7F	; 127
     fc4:	9e 83       	std	Y+6, r25	; 0x06
     fc6:	8d 83       	std	Y+5, r24	; 0x05
     fc8:	ae 01       	movw	r20, r28
     fca:	46 5e       	subi	r20, 0xE6	; 230
     fcc:	5f 4f       	sbci	r21, 0xFF	; 255
     fce:	68 8d       	ldd	r22, Y+24	; 0x18
     fd0:	79 8d       	ldd	r23, Y+25	; 0x19
     fd2:	ce 01       	movw	r24, r28
     fd4:	01 96       	adiw	r24, 0x01	; 1
     fd6:	2f db       	rcall	.-2466   	; 0x636 <vfprintf>
     fd8:	ef 81       	ldd	r30, Y+7	; 0x07
     fda:	f8 85       	ldd	r31, Y+8	; 0x08
     fdc:	e0 0f       	add	r30, r16
     fde:	f1 1f       	adc	r31, r17
     fe0:	10 82       	st	Z, r1
     fe2:	2e 96       	adiw	r28, 0x0e	; 14
     fe4:	0f b6       	in	r0, 0x3f	; 63
     fe6:	f8 94       	cli
     fe8:	de bf       	out	0x3e, r29	; 62
     fea:	0f be       	out	0x3f, r0	; 63
     fec:	cd bf       	out	0x3d, r28	; 61
     fee:	df 91       	pop	r29
     ff0:	cf 91       	pop	r28
     ff2:	1f 91       	pop	r17
     ff4:	0f 91       	pop	r16
     ff6:	08 95       	ret

00000ff8 <__ultoa_invert>:
     ff8:	fa 01       	movw	r30, r20
     ffa:	aa 27       	eor	r26, r26
     ffc:	28 30       	cpi	r18, 0x08	; 8
     ffe:	51 f1       	breq	.+84     	; 0x1054 <__ultoa_invert+0x5c>
    1000:	20 31       	cpi	r18, 0x10	; 16
    1002:	81 f1       	breq	.+96     	; 0x1064 <__ultoa_invert+0x6c>
    1004:	e8 94       	clt
    1006:	6f 93       	push	r22
    1008:	6e 7f       	andi	r22, 0xFE	; 254
    100a:	6e 5f       	subi	r22, 0xFE	; 254
    100c:	7f 4f       	sbci	r23, 0xFF	; 255
    100e:	8f 4f       	sbci	r24, 0xFF	; 255
    1010:	9f 4f       	sbci	r25, 0xFF	; 255
    1012:	af 4f       	sbci	r26, 0xFF	; 255
    1014:	b1 e0       	ldi	r27, 0x01	; 1
    1016:	3e d0       	rcall	.+124    	; 0x1094 <__ultoa_invert+0x9c>
    1018:	b4 e0       	ldi	r27, 0x04	; 4
    101a:	3c d0       	rcall	.+120    	; 0x1094 <__ultoa_invert+0x9c>
    101c:	67 0f       	add	r22, r23
    101e:	78 1f       	adc	r23, r24
    1020:	89 1f       	adc	r24, r25
    1022:	9a 1f       	adc	r25, r26
    1024:	a1 1d       	adc	r26, r1
    1026:	68 0f       	add	r22, r24
    1028:	79 1f       	adc	r23, r25
    102a:	8a 1f       	adc	r24, r26
    102c:	91 1d       	adc	r25, r1
    102e:	a1 1d       	adc	r26, r1
    1030:	6a 0f       	add	r22, r26
    1032:	71 1d       	adc	r23, r1
    1034:	81 1d       	adc	r24, r1
    1036:	91 1d       	adc	r25, r1
    1038:	a1 1d       	adc	r26, r1
    103a:	20 d0       	rcall	.+64     	; 0x107c <__ultoa_invert+0x84>
    103c:	09 f4       	brne	.+2      	; 0x1040 <__ultoa_invert+0x48>
    103e:	68 94       	set
    1040:	3f 91       	pop	r19
    1042:	2a e0       	ldi	r18, 0x0A	; 10
    1044:	26 9f       	mul	r18, r22
    1046:	11 24       	eor	r1, r1
    1048:	30 19       	sub	r19, r0
    104a:	30 5d       	subi	r19, 0xD0	; 208
    104c:	31 93       	st	Z+, r19
    104e:	de f6       	brtc	.-74     	; 0x1006 <__ultoa_invert+0xe>
    1050:	cf 01       	movw	r24, r30
    1052:	08 95       	ret
    1054:	46 2f       	mov	r20, r22
    1056:	47 70       	andi	r20, 0x07	; 7
    1058:	40 5d       	subi	r20, 0xD0	; 208
    105a:	41 93       	st	Z+, r20
    105c:	b3 e0       	ldi	r27, 0x03	; 3
    105e:	0f d0       	rcall	.+30     	; 0x107e <__ultoa_invert+0x86>
    1060:	c9 f7       	brne	.-14     	; 0x1054 <__ultoa_invert+0x5c>
    1062:	f6 cf       	rjmp	.-20     	; 0x1050 <__ultoa_invert+0x58>
    1064:	46 2f       	mov	r20, r22
    1066:	4f 70       	andi	r20, 0x0F	; 15
    1068:	40 5d       	subi	r20, 0xD0	; 208
    106a:	4a 33       	cpi	r20, 0x3A	; 58
    106c:	18 f0       	brcs	.+6      	; 0x1074 <__ultoa_invert+0x7c>
    106e:	49 5d       	subi	r20, 0xD9	; 217
    1070:	31 fd       	sbrc	r19, 1
    1072:	40 52       	subi	r20, 0x20	; 32
    1074:	41 93       	st	Z+, r20
    1076:	02 d0       	rcall	.+4      	; 0x107c <__ultoa_invert+0x84>
    1078:	a9 f7       	brne	.-22     	; 0x1064 <__ultoa_invert+0x6c>
    107a:	ea cf       	rjmp	.-44     	; 0x1050 <__ultoa_invert+0x58>
    107c:	b4 e0       	ldi	r27, 0x04	; 4
    107e:	a6 95       	lsr	r26
    1080:	97 95       	ror	r25
    1082:	87 95       	ror	r24
    1084:	77 95       	ror	r23
    1086:	67 95       	ror	r22
    1088:	ba 95       	dec	r27
    108a:	c9 f7       	brne	.-14     	; 0x107e <__ultoa_invert+0x86>
    108c:	00 97       	sbiw	r24, 0x00	; 0
    108e:	61 05       	cpc	r22, r1
    1090:	71 05       	cpc	r23, r1
    1092:	08 95       	ret
    1094:	9b 01       	movw	r18, r22
    1096:	ac 01       	movw	r20, r24
    1098:	0a 2e       	mov	r0, r26
    109a:	06 94       	lsr	r0
    109c:	57 95       	ror	r21
    109e:	47 95       	ror	r20
    10a0:	37 95       	ror	r19
    10a2:	27 95       	ror	r18
    10a4:	ba 95       	dec	r27
    10a6:	c9 f7       	brne	.-14     	; 0x109a <__ultoa_invert+0xa2>
    10a8:	62 0f       	add	r22, r18
    10aa:	73 1f       	adc	r23, r19
    10ac:	84 1f       	adc	r24, r20
    10ae:	95 1f       	adc	r25, r21
    10b0:	a0 1d       	adc	r26, r0
    10b2:	08 95       	ret

000010b4 <_exit>:
    10b4:	f8 94       	cli

000010b6 <__stop_program>:
    10b6:	ff cf       	rjmp	.-2      	; 0x10b6 <__stop_program>
